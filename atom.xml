<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jason Read]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-01-08T03:12:21.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Jason Tai]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2016/01/08/read2/"/>
    <id>http://yoursite.com/2016/01/08/read2/</id>
    <published>2016-01-08T09:56:51.000Z</published>
    <updated>2016-01-08T03:12:21.000Z</updated>
    <content type="html"><![CDATA[<p>第七章</p>
<p>记忆过载<br>演化并没有让人有踢足球赛的能力。确实，演化让人有脚能踢球，有肘能犯规，还有嘴能骂人，但这些加起来，顶多就是让人能自己玩玩球而已。想在某个下午和球场上的陌生人一起来踢场足球赛，不只得和10个可能从未见过面的人合作当队友，还得知道对方11个人也会遵守一样的规则。有些时候，其他动物也会和陌生同类合作，进行仿若仪式的侵略举动，但通常都是出于其本能。例如小狗有时候会玩得滚来滚去、咬来咬去，但那是深植于它们基因里的设计。只不过，我们人类的孩子可没什么玩足球的基因设计。我们之所以能和完全陌生的人踢球赛，是因为大家都学过同样一套的足球规则。这些规则全部都是想象出来的，不过只要大家都同意，还是能玩得十分开心。</p>
<p>这种情况同样适用于像是王国、教会或贸易网络等较大的规模，只有一项重要区别：复杂的程度不同。相对来说，足球的规则简单明了，很像是过去采集时代各个小部落或小村庄之间要合作时的共识。所有球员都可以轻轻松松把规则全部记在脑子里，同时大脑还有余裕记得一些歌曲、影像，甚至是待会儿要买什么。只不过，如果不是像这样只有22个人要合作，而是有几千甚至几百万人要合作，需要储存及处理的信息量就会极度庞大，绝不是任何单一人脑所能记忆处理的。</p>
<p>某些其他物种（像是蚂蚁和蜜蜂）也能形成大型社会，而且稳定又灵活。但这是因为它们的基因组里就已经储存了合作所需的大部分信息。蜜蜂的未受精卵会发育成雄蜂，受精卵则发育成雌蜂，但雌蜂幼虫依据被喂食的食物不同，长大后可能成为蜂后，也可能成为一般的工蜂。在它们的DNA里，已经为两种不同角色都设定好必要的行为模式，前者让它能母仪天下，后者则让它尽心尽力、认真工作。蜂巢里的社会结构非常复杂，有许多不同种类的工蜂，有的负责觅食，有的负责照护，有的负责清洁等等。但到目前为止，我们可没人见过有蜜蜂当律师负责打蜜蜂官司。之所以蜜蜂不需要律师，是因为不会有蜜蜂打算违反什么蜂巢宪法，认为清洁蜂不该有生命权、自由权和追求幸福的权利。</p>
<p>但人类可就不同了，这种事总是不断发生。因为智人的社会秩序是通过想象建构，维持秩序所需的关键信息无法单纯靠DNA复制就传给后代，需要通过各种努力，才能维持种种法律、习俗、程序、礼仪，否则社会秩序很快就会崩溃。举例来说，汉谟拉比国王将人分成上等人、平民和奴隶，但这件事并不存在于人类的基因组里，并不是一个自然的区分方式。如果巴比伦人无法让大家的心里都有这项“真理”，整个社会就会停止运作。同样，就算是汉谟拉比本人，他后代的DNA里也没记载着上等人如果杀了个平民女性就该付30舍客勒的银子。汉谟拉比必须特地教导他的儿子，告诉他帝国的法律是如何如何，以后再由儿子来教孙子，以此代代相传。</p>
<p>一个帝国要运作，会产生大量的信息。除了法律之外，帝国还必须记录各种交易和税收、军用物资和商品的库存量，还有各种节庆及打胜仗的日期。在先前的几百万年间，人类只有一个地方可以记录信息：他们的大脑。但很遗憾，对于整个帝国这么大的数据量来说，人类的大脑并不是个很好的储存设备，主要原因有三。</p>
<p>第一，大脑的容量有限。确实有些人记忆力惊人，而且古代也有人专门研究记忆术，整个省的地形地势了然于胸，整部国家法典倒背如流。尽管如此，还是有连记忆大师也无法超越的限制。像是律师就算能把整个马萨诸塞州的法条都背下来，也不可能把从17世纪塞勒姆（Salem）女巫审判以降所有诉讼细节全记得一清二楚。</p>
<p>第二，人类总难免一死，而大脑也随之死亡。所以，任何储存在大脑里的信息多半在一个世纪内就会消失。当然，我们可以把记忆从一个大脑传达到另一个大脑里，但传递几次之后，信息总是会开始乱成一团或是遭到遗忘。</p>
<p>第三，也是最重要的一点，在于人类的大脑经过演化，只习惯储存和处理特定类型的信息。为了生存，远古的狩猎采集者必须能够记住数千种动植物的形状、特性和行为模式。像是他们必须记住，一朵皱巴巴的黄色菇类，如果是在秋天长在榆树下，就很有可能有毒，但如果是在冬天长在橡树下，却是种很好的胃药。此外，狩猎采集者也得记住部落里几十个人彼此的意见和关系。例如假设露西需要部落里有人帮她挡住约翰，叫他别来骚扰她，就很需要记得像是约翰上周与玛丽吵了一架，所以现在找玛丽准没错。因此，演化压力让人类的大脑善于储存大量关于动植物、地形和社会的信息。</p>
<p>然而在农业革命之后，社会开始变得格外复杂，另一种全新的信息类型也变得至关重要：数字。采集者以前从来不需要处理大量的数字。例如采集者不用记得森林里每棵树上有几个果子；也因此，人类的大脑不习惯储存和处理数字。然而如果要管理一个大国家，数字可以说是一大关键。国家光是立法、讲些关于守护神的故事还不够，像是收税这种事就万万不可少。而为了向数十万国民收税，国家就必须先收集关于国民收入及财产的数据，关于付款的数据，关于欠款、债务和罚款的数据，关于折扣及豁免的数据。这些数字总共会有几百万的数据位需要储存和处理。国家要是无法应付，就永远不知道手中有什么资源，未来又能利用什么资源。但对大多数人来说，讲到要记忆、回忆、处理这些数字，不是觉得脑力超载，就是觉得昏昏欲睡。</p>
<p>这种人脑的限制大大局限了人类合作的规模和程度。如果某个社会的人数和物品的数量超过某个临界值，就必定需要储存和处理大量的数字数据。但人脑又力有未逮，于是系统也就崩溃。正因如此，就算在农业革命后的数千年间，人类的社会网络还是相对规模较小，也相对简单。</p>
<p>最早克服这项问题的是远古美索不达米亚南部的苏美尔人。当地艳阳高照、平原肥沃，发展出发达的农业、繁荣的城镇。随着居民人数增长，要协调各项事务所需的信息也不断膨胀。在公元前3500年~公元前3000年之间，一些不知名的苏美尔天才发明了一套系统，可以在人脑之外储存和处理信息，专为处理大量数字数据所量身打造。从此，苏美尔人的社会秩序不再受限于人脑的处理能力，而开始能走向城市、王国和帝国。苏美尔人所发明的这套数字处理系统，正是“书写文字”。</p>
<p>由库辛签核</p>
<p>文字是采用实体符号来储存信息的方式。苏美尔文字系统结合了两种类型的符号，刻印在黏土泥板上。第一种符号代表的是数字，分别有符号可以表达1、10、60、600、3600，以及36000。（苏美尔人的数字系统分别以6和10作为基数。即使到现在，人类生活还是处处可见以6为基数，像是一个圆有360度，一天有24小时。）另一类型的符号则代表人、动物、商品、领土、日期等等。结合这两种符号，苏美尔人能够记下的数据量就能够远胜于任何大脑的容量或任何DNA所含的基因码。</p>
<p>在早期，文字只用来记录事实和数字。就算苏美尔人当时真的有过小说，也从来不曾刻印到泥板上。毕竟，当时要写下文字不仅耗时，而且能阅读的群众又太少，所以除了必要的记录之外，实在没有书写的必要。如果我们想知道人类的祖先在5000年前写下了什么智慧的话语，很可能就会非常失望。举例来说，目前找到人类祖先最早留给我们的信息是“29086单位大麦37个月库辛”。这句话最有可能的解读是：“在37个月间，总共收到29086单位的大麦。由库辛签核。”很遗憾，人类史上的第一个文本不但不是哲学巧思，不是诗歌，不是传奇，不是法律，甚至也不是对王室歌功颂德，而是无聊至极的财经文件，记录各种税务、债务以及财产的所有权。</p>
<p>图13 来自古城乌鲁克（Uruk）大约公元前3400~公元前3000年的泥板，记载着当时的行政文书。这块泥板清楚记载着在37个月内收到了29086单位的大麦（大约3800蒲式耳），并由名叫“库辛”的人签核。这里的“库辛”可能是当时的某个职称，又或是某个人的名字。如果库辛真的是个名字，他可能就是史上第一个我们知道名字的人！所有先前我们使用的名称，像是“尼安德特人”、“纳图芬人”、“雪维洞穴”、“哥贝克力石阵”，都只是现代人为它们取的名字。像是哥贝克力石阵，我们其实并不知道当时建造它的人怎么称呼这个地方。而在文字出现之后，我们终于能够再通过当时人的耳朵，“听到”一些历史。很有可能，当时库辛的邻居就会朝着他大叫“库辛！”这个声音。这一切说明，史上第一个记下的名称或名字，是属于一个会计师，而不是什么先知、诗人，或是伟大的征服者。41</p>
<p>除此之外，远古时代只有另一个其他类型的文本幸存，而且甚至比那块泥板更无趣：就只是一堆单词，由当时的文士一再重复抄写，作为练习。而且，就算当时的学生已经抄账单抄到深感无聊，想要自己写首诗，客观条件也并不允许。最早的苏美尔文字只能部分表意（partial script），而无法完整表意（full script）。所谓完整表意，指的是这套符号能够大致完整表达出口头语言；这样一来，就能表达一切人类口传的内容，包括诗歌。但另一方面，所谓部分表意，就是指这套系统只能呈现特定种类的信息，局限于特定领域的活动。举例来说，拉丁文、古埃及象形文字和盲人点字都能够完整表意，不论是税条、史书、商业法律，或是情诗和历史著作，全部难不倒它。相较之下，最早的苏美尔文字就像是现代的数学符号和音乐符号，只能部分表意。例如数学符号虽然能用来计算，但要写情诗就做不到了。</p>
<p>虽然部分表意的文字系统无法完整传达人类的口语，但也能表达一些不在口语范围内的意义。像是苏美尔文字、数学符号，虽然不能拿来写诗，但讲到记账收税可是效率一流。</p>
<p>对苏美尔人来说，苏美尔文字不能拿来写诗似乎并不是什么大问题。毕竟他们发明文字的目的不在于复制口语，而是想要完成一些口语没做到的事。像是在哥伦布抵达美洲之前，安第斯山脉就有一些文化，从来就只有部分表意的文字，他们并不会觉得这样不够用，也不觉得有必要发展成完整表意的文字。安第斯文化的文字和苏美尔文字大有不同，不同的程度大到有很多人甚至不认为这是一种文字。这些文字不是写在泥板或纸张上，而是在各种颜色的绳子上打结来表示，称为“结绳语”（quipu）。每个结绳语的文本都有许多不同颜色的绳子，材质可能是羊毛，也可能是棉花。在每根绳子的各种位置上绑着几个结。光是一个结绳语文本，就可能有数百条绳子、几千个结。通过这些不同颜色、不同绳子、不同打法的结，安第斯文化就能记录大量的数字数据，像是税收或是财产所有的数据。42</p>
<p>图14 12世纪的安第斯文化结绳语。</p>
<p>而数百甚至数千年来，对于当地城市、王国和帝国的商业来说，结绳语都不可或缺。43结绳语在印加帝国时间达到鼎盛，当时印加帝国人口约有10万到12万，疆域包括今日的秘鲁、厄瓜多尔和玻利维亚，以及部分的智利、阿根廷和哥伦比亚。这样庞大的帝国需要复杂的行政系统，也就需要储存和处理大量数据，要是没有结绳语，绝对是不可能的任务。</p>
<p>事实上，正因为结绳语有效又准确，就算在西班牙人占领南美之后，还是用结绳语来管理他们建立的新帝国。但问题在于，西班牙人并不知道该如何记录和阅读结绳语，一切有赖于当地专业人士协助。而这些新的统治者便意识到，这让当地的结绳语专家能够轻易欺瞒误导这些统治者，情势大大不利。所以等到西班牙的统治势力站稳扎根，就全面废弃了结绳语，所有记录改用拉丁文和数字。而在西班牙占领过后，结绳语文本绝大多数均已逸失，即使幸存，也因为能阅读的人才凋零，而成了无人能懂的文本。</p>
<p>官僚制度的奇迹</p>
<p>终于，美索不达米亚人开始希望除了无聊的数字数据外，还能写些别的东西。在公元前3000年~公元前2500年间，苏美尔文字系统逐渐加入越来越多的符号，成为能够完整表意的文字，今天它们被称为楔形文字。到了公元前2500年，国王已经能用楔形文字颁布法令，祭司用它来记录神谕，至于一般平民大众则是用来写写信。差不多同一时间，埃及也发展出另一种能够完整表意的文字——古埃及象形文字。另外，中国在大约公元前1200年、中美洲各地在公元前1000年至公元前500年间，也都发展出了完整表意的文字。</p>
<p>从以上这些最初的中心，完整表意的文字开始向四方远扬，发展出各种形式以及新的用途，让人开始用文字来写诗、编史、耍浪漫、演戏剧、提预言，甚至是记食谱。然而，文字最重要的任务仍然是记录大量的数字数据，而这也是部分表意文字的特别强项。无论是希伯来的《圣经》、希腊的史诗《伊利亚特》、印度的长叙事诗《摩诃婆罗多》，还是佛教的《大藏经》，一开始都是口述作品。这些作品世世代代靠的都是口传，就算没有发明文字，也还是会继续再传下去。但讲到税务登记和复杂的官僚制度，就要等到部分表意的文字出现后才应运而生，而且就算到了今天还是像连体婴儿一样密不可分；种种计算机数据库和电子表格，藏着不为外界所知的秘密。</p>
<p>随着越来越多的事情通过文字记载，特别是行政档案数据变得无比庞杂，也就出现了新的问题。记在人脑里的信息找起来非常方便。以我自己为例，虽然我的大脑里藏着几千兆位的数据，但我可以几乎是立刻想起意大利首都的名字，再想起我在2001年“9·11”事件那天做了什么，还能马上想出从我家到耶路撒冷希伯来大学的路线。至今，大脑为何能做到这样仍然是一个谜，但我们都知道它的检索系统效率惊人。（只不过，找钥匙这件事可能是个例外。）</p>
<p>如果是结绳语的绳子或是写着文字的泥板，又该怎么检索数据？如果只有个10片甚至100片的泥板，都还不是个问题。只不过，若是与汉谟拉比同时代马里（Mari）城邦的国王齐默里宁（Zimrilim），已经累积了数千片泥板，该怎么办？</p>
<p>想象一下在公元前1776年。两个马里人在争论一片麦田的所有权。雅各布言之凿凿，说他早在30年前就向以扫买了这片田。但以扫不同意，说他是把这片地租给雅各布，租期30年，现在租期到了，他要收回土地了。双方火气上升，开始互相叫嚣推打，但他们忽然想到，可以到王室的档案库去查查，那里有全王国房地产相关的记录和数据。但等抵达了档案库，他们就被各部门的人像皮球一样踢来踢去，叫他们先坐下来喝杯青草茶休息等等，或是明天请早些再来。好不容易才终于有个承办人员一边碎碎念一边带着他们去找相关的泥板。承办员打开一扇门，来到一个巨大的房间，从地板到天花板堆积着成千上万片的泥板。也难怪承办人员心情糟，他该怎样才能找到记着30年前麦田合约的那块泥板？而就算找到了，又怎么能知道这块30年前的泥板就是关于这片麦田的最新合约？另外，如果找不到这块泥板，难道就能说以扫从未出售或出租这片麦田吗？会不会只是泥板搞丢了，或是某次下雨渗水把它给溶了？</p>
<p>显然，光是把记录压印在泥板上，并没办法让数据处理有效率、准确和方便。我们还需要有组织工具（像是编目）、快速的复制工具（像是复印机）、快速准确的检索工具（像是计算机运算），而且还得有够聪明（最好心情还能好一些）的负责人员，能够了解这些工具的使用方法。</p>
<p>事实证明，发明这些工具要比发明书写文字难上太多了。许多时地都相差甚远的文化，都各自发展出了自己的文字系统。每隔几年，总有考古学家又发现了其他某种被遗忘的文字，甚至有些还可能比苏美尔泥板更久远。但这些文字多半就只是些新鲜但不实用的发明，原因就在于这些文化没能找出方法来有效编目和检索数据。而苏美尔、古埃及、古中国和印加帝国的特殊之处，就在于这些文化都发展出了良好的技术，能够将文字记录予以归档、编目和检索，另外还投入资本培养人才来负责抄写、数据管理和会计事务。</p>
<p>考古学者在美索不达米亚发现了一份当时的书写作业，让我们得以一窥大约4000年前的学生生活：</p>
<p>我走进去坐下，老师来检查我的泥板。<br>他说：“你漏了一些东西！”<br>然后他就用棍子打我。<br>另一个管事的人说：“未经我允许，你竟敢讲话？”<br>然后他就用棍子打我。<br>管秩序的人说：“未经我允许，你竟敢站起来？”<br>然后他就用棍子打我。<br>看门的说：“未经我允许，你竟敢出去？”<br>然后他就用棍子打我。<br>管啤酒壶的说：“未经我允许，你竟敢倒啤酒？”<br>然后他就用棍子打我。<br>苏美尔语的老师说：“你竟敢说阿卡德语？” [4]<br>然后他就用棍子打我。<br>我的老师说：“你的字很丑！”<br>然后他就用棍子打我。44<br>古代的抄写员不但得会读会写，还得知道如何查目录、辞典、日历、表格和图表。他们得要学习并内化种种编目、检索和处理信息的技巧，而且这些都和大脑原本内建的机制非常不同。在大脑里，所有数据都自由地互相联结。像是我在和另一半一起去办新家抵押贷款的时候，就想到我们一起住的第一个地方，这又让我想到去新奥尔良度的蜜月，再想到鳄鱼，再想到西方的恶龙，再想到歌剧《尼布龙根的指环》；结果我不知不觉就哼起了歌剧里面齐格飞的主旋律，把银行职员搞得一头雾水。对官僚制度来说，各种数据必须清楚分开。一个抽屉放住宅抵押贷款，一个放结婚证书，第三个放税务登记材料，第四个放诉讼案件卷宗。否则哪知道该到哪去找？而如果有某件事情同时属于很多个抽屉（例如华格纳的音乐剧究竟该算是“音乐”还是“戏剧”？还是该干脆另列一类？），可就头痛了。所以，这些制度总是在不停新增、删除和重新分配这些抽屉。</p>
<p>为了要让工作顺利，操作这种抽屉系统的人必须接受训练，思考的方式不能像一般人，而得有专业文书和会计的样子。从古至今，我们都知道文书和会计的想法就是有点没人性，像个文件柜一样。但这不是他们的错。如果他们不这样想，他们的抽屉就会一片混乱，也就无法为政府、公司或组织提供所需的服务。而这也正是文字对人类历史所造成最重要的影响：它逐渐改变了人类思维和看待这个世界的方式。过去的自由连接、整体思考，已经转变为分割思考、官僚制度。</p>
<p>数字的语言</p>
<p>几个世纪过去，官僚制度式的数据处理方式与人类自然思考方式的差异越来越大，重要性也越来越高。还不到9世纪的时候，发明了另一种部分表意的文字，让储存和处理数字数据的效率一日千里，成为重要的里程碑。这种文字是由10个符号组成，代表从0到9的数字。很容易让人搞错的一点在于，虽然这些符号现在被称为“阿拉伯数字”，但其实是印度人发明的。而且现代阿拉伯人自己还用了一组和西方颇不相同的数字符号系统，就更叫人一头雾水。之所以现在我们会称“阿拉伯数字”，是因为阿拉伯人攻打印度时发现了这套实用的系统，再加以改良传到中东，进而传入欧洲。等到有几个其他符号加入了阿拉伯数字系统（例如加号、减号、乘号），就成了现代数学符号的基础。</p>
<p>虽然这整套系统仍然只是种部分表意的文字符号，但这已经成为全世界的一大重要语言。几乎所有的国家、企业、组织和机构，不管讲的是阿拉伯语、印度语、英语还是挪威语，都必须使用数学符号来记录及处理数据。只要能将信息转成数学符号，储存、传播和处理的速度和效率就能快到令人叹服。</p>
<p>因此，如果哪个人想打动政府、组织和企业，就必须学会“用数字说话”。而专家也费尽心力，甚至像是“贫穷”、“幸福”和“诚实”这些概念，都能翻译成一个又一个的数字，成了“贫穷线”、“主观幸福感程度”、“信用等级”。而像是物理和工程方面，几乎整个知识领域都快要和人类的口语语言脱节，而由数学符号独挑大梁。</p>
<p>这是根据相对论所推导出来的公式，能够计算质量重力加速度。大多数一般人只要见到这个公式一眼就只能瞠目结舌，像是鹿在路上被车灯照到一样。这种反应其实很自然，并不代表这个人天生愚鲁或是缺乏好奇。除了极少数例外，人类大脑就是没有思考像是相对论或量子力学这些概念的能力。物理学家之所以能这样思考，是因为他们抛下了传统的人类思维方式，从头学习如何在外部数据处理系统的协助下思考。他们的思考过程有很重要的一部分并不是在他们的脑子里，而是在计算机里或是教室黑板上。</p>
<p>近来，数学符号已经带来另一种更革命性的文字系统，计算机所使用的二进制程序语言，全部只有两个符号：0与1。就像是现在我用键盘打到计算机上的所有文字，也都是由0和1的组合所呈现。</p>
<hr>
<p>文字本来应该是人类意识的仆人，但现在正在反仆为主。计算机并无法理解智人如何说话、感觉和编织梦想，所以我们现在反而是用一种计算机能够理解的数字语言来教智人如何说话、感觉和编织梦想。</p>
<p>而且这还没完。人工智能的领域还希望能够完全在计算机二进制的程序语言上创造一种新的智能。像是科幻电影《黑客任务》或《魔鬼终结者》，就都预测着总有一天这些二进制语言会抛下人性给它们的枷锁，而人类想要反扑的时候，它们就会试图消灭人类。</p>
<p> [4]　就算当时大家都讲阿卡德语，但苏美尔语仍然是官方语言，也是各项记录所用的语言。因此立志成为抄写员的人就得讲苏美尔语。</p>
<p>第八章</p>
<p>历史从无正义<br>农业革命后几千年的历史，可以总结为一个问题：如果人类的基因里并没有大规模合作的生物本能，所有的合作网络究竟如何维系？简单的讲法，是人类创造出了由想象建构的秩序、发明了文字，以这两者补足我们基因中的不足。</p>
<p>但对许多人来说，这些合作网络究竟是好是坏实在难说。网络背后那些想象的秩序既不中立也不公平，总把人分成一些其实并不存在的分类，并且排出上下等级。上等人享有各种权力和特权，而下等人有的只有歧视和压迫。以《汉谟拉比法典》为例，这部法典就将社会分成上等人、平民和奴隶。上等人养尊处优，享尽一切好处。平民只能捡捡上等人剩下的东西。而奴隶如果还敢抱怨，就等着吃苦头了。</p>
<p>就算是1776年的美国《独立宣言》，尽管把人人生而平等喊得震天响，其实还是把人分成了上下等级。《独立宣言》区分了男女，男性从中得利，但女性却被剥夺了同样的权利。《独立宣言》也区分了白人、黑人和印第安人，让白人享有自由民主，但却认为黑人和印第安人是比较劣等的人类，不该享有平等的权利。当时许多蓄奴的人也在《独立宣言》上签了名，他们签署后并未释放奴隶，但一点儿也不觉得自己言行不一。在他们看来，黑鬼哪有什么“人”权？</p>
<p>美国这套秩序还区分了贫富之间的阶级。当时，美国人对于有钱爸妈把遗产和家族企业留给子女多半并不觉得有什么问题。在他们看来，所谓“平等”指的只有“法律面前人人平等”这件事，而与失业救济、普及教育或健康保险无关。至于当时的“自由”，也与今天截然不同。在1776年，“自由”并不代表着权利遭侵夺的人能够取得并行使权利（至于黑人、印第安人或女性更是绝无可能），而只是代表着除非特殊状况，否则国家不能没收或处分公民的私有财产。这么说来，美国这套秩序所奉行的就是“财富的阶级”，有些人会认为这就是神的旨意，也有些人会认为这是自然不变的规律。这些人会说，勤劳致富，懒惰则困穷，这是自然的赏罚原则。</p>
<p>然而，以上所有的区别，不管是自由人／奴隶、白人／黑人、富人／穷人，都只是虚构的想象所建构出来的。（后面会另外来谈男女的阶级问题。）然而历史的铁则告诉我们，每一种由想象建构出来的秩序，都绝不会承认自己出于想象和虚构，而会大谈自己是自然、必然的结果。举例来说，许多赞成奴隶制度的人就认为，这是自然现象，并不是人类所发明出来的一种制度。汉谟拉比认为，为人或为奴是神所决定的。亚里士多德也认为，奴隶有“奴隶的本质”，而自由人有“自由的本质”，他们的社会地位不同，只是本质的展现。</p>
<p>而且，如果你问一个白人至上主义者为什么赞成种族阶级制度，他几乎一定能跟你滔滔不绝地来场伪科学讲座，告诉你不同种族之间本来就有生物学上的差异，比如说，白人的血液或基因就有什么特殊之处，让他们天生更聪明、更有道德感也更勤奋。另外，如果你问一个资本主义的忠实拥护者为什么赞成财富阶级的制度，他也很可能告诉你，这正是客观能力差异带来的必然结果。这些人认为，有钱人之所以有钱，是因为他们能力更强，工作更认真。这样一来，有钱人该有更好的医疗保健、更好的教育、更好的营养，也是天经地义的事。这每分每毫，都是他们应得的。</p>
<p>至于赞成种姓制度的印度教徒则相信，是宇宙的力量划分了种姓的阶级。根据著名的婆罗门教神话，诸神是以原人普罗沙（Purusa）的身体创造这个世界：他的眼睛化成太阳，他的大脑化成月亮，他的口化成了婆罗门（祭司），他的手化成了刹帝力（贵族、武士），他的大腿化成了吠舍（农民和商人等平民），而他的小腿则化成了首陀罗（仆人）。如果相信这种说法，那么婆罗门和首陀罗的社会地位差异就再自然不过，就像太阳和月亮本来就该有所不同。45而中国古代的《风俗通》也记载，女娲开天辟地的时候要造人，一开始用黄土仔细捏，但后来没有时间余力，便用绳子泡在泥里再拉起来，飞起的泥点也化成一个一个的人，于是“富贵者，黄土人；贫贱者，引绳人也”。46</p>
<p>然而就我们目前所知，这些阶级区别不过全都是人类想象的产品罢了。不管是婆罗门还是首陀罗，都不是诸神从某个原人的不同身体器官所创造出来的。这两个种姓阶级的区别，不过就是大约3000年前在印度北部由人类自己发明创造的一套法律和规范。而亚里士多德的讲法也有问题，奴隶和自由人之间并没有已知的生物学差异。一切都是因为人类的法律和规范，才让某些人变成奴隶，某些人变成主人。至于黑人和白人之间，虽然有例如皮肤颜色和毛发类型之类的客观生物学差异，但没有证据显示这些差异会影响到智力或道德观。</p>
<p>大多数人都会认为只有自己社会的阶级是自然的，而其他社会的阶级分法都实在是虚假又荒谬。现代的西方教育对种族阶级制度嗤之以鼻，如果现在有法律禁止黑人住在白人小区、进入白人学校就读或到白人医院就医，一定会引发轩然大波。但如果说的是贫富阶级，有钱人住在独立、豪华的住宅区，就读专为有钱人提供的私立名校，能进到专为有钱人提供的高档医疗机构，这一点对于许多美国和欧洲人来说，却似乎再天经地义不过。但事实已经证明，大多数有钱人之所以有钱，只是因为他出生在有钱的家庭，而大多数穷人一辈子没钱，也就只是因为他出生在贫穷的家庭而已。</p>
<hr>
<p>但不幸的是，复杂的人类社会似乎就是需要这些由想象建构出来的阶级制度和歧视。当然，各种阶级制度的道德意义不一，某些社会的歧视也比其他社会更为严重或极端，但至少就目前学者研究，还没有任何一个大型人类社会能真正免除歧视的情形。一次又一次，人类要让社会有秩序的方法，就是会将成员分成各种想象出来的阶级，像是上等人、平民和奴隶；白人和黑人；贵族和平民；婆罗门和首陀罗；又或是富人和穷人。所有这些阶级，就是要让某些人在法律上、政治上或社会上高人一等，从而规范了数百万人的关系。</p>
<p>阶级有其重要功能。有了阶级之后，陌生人不用浪费时间和精力真正了解彼此，也能知道该如何对待对方。在萧伯纳（Bernard Shaw）的作品《卖花女》（Pygmalion，曾改编为电影《窈窕淑女》）中，希金斯（Henry Higgins）教授虽然不认识卖花女伊莉莎，但对两人之间的关系拿捏却是丝毫不需犹豫。原因就在于：他一听到她讲话，就知道她是个下层阶级的人，几乎可说是任他宰割——例如将她当作棋子，打赌可以把这个卖花女假扮成名媛淑女而不被看穿。至于如果是现代版的伊莉莎，花店小姐也得知道每天面对着来店的几十个客人，该如何才能卖出一束又一束的玫瑰和剑兰。她不可能有时间和精力做个完整的顾客身家调查，知道每个人的喜好如何，口袋又有多深。所以她得抓住某些“社交线索”，像是客人的衣着打扮、年龄、肤色（虽然这实在不太政治正确），来猜猜看这个客人究竟会是个大会计师，可能大手笔为母亲生日买上一大把的长茎玫瑰，又或是个送货小弟，只买得起一小把雏菊，想送给某个笑容甜美的柜台小姐。</p>
<p>当然，天生自然的能力也很可能影响社会阶级差异，但是种种不同的能力和性格常常还是会受到想象阶级的影响。关于这一事实主要有两大方面。第一，也是最重要的一点，就是大多数的能力也需要培养和发展。就算某个人天生就有某种才能，如果不经过积极培养、磨炼和运用，常常也就没什么表现的机会。但这些机会绝非人人平等，常常都是要看他们在想象建构出的社会阶级中身处何处而定。哈利·波特其实就是个很好的例子。他从小被迫与能力出色的巫师父母分离，而由对巫术一无所知的麻瓜带大，所以等他到了霍格华兹的时候，对巫术可以说是一窍不通。于是，他的故事整整写了七本书，他才真正掌握了这项独特才能的力量和知识。</p>
<p>第二，就算身处不同阶级的人发展出了完全一样的能力，因为他们面对的游戏规则不同，最后结果也可能天差地别。举例来说，假设是在英国统治下的印度，有四个人都有完全相同的商业头脑，但四个人分别是秽多、婆罗门、天主教爱尔兰人和新教英国人，他们致富的概率就仍然大不相同。这场经济的游戏，其实早就被种种法律限制和潜规则束缚住了手脚，根本不知道公平在哪里。</p>
<p>恶性循环</p>
<p>虽然说所有社会的背后都是由想象建构出来的秩序，但种种秩序却又各有不同。这些差异的原因为何？传统的印度社会是用种姓制度来分阶级，土耳其人用宗教，美国用种族，但为何如此？这些阶级制度开始时多半只是因为历史上的偶发意外，但部分群体取得既得利益之后，世世代代不断加以延续改良，才形成现在的样子。</p>
<p>例如许多学者推测，印度种姓制度成形的时间是在大约3000年前，印度–雅利安人（Indo-Aryan）入侵印度、征服当地居民。入侵者建立了阶级森严的社会，可想而知，他们自己占的是最上等的位置（祭司和战士），而当地人就只能做仆人或奴隶。入侵者在人数上并不占优势，因此很担心失去他们的特权地位和独特的身份。为了防患未然，他们就将所有人民依种姓分类，各自需要担任特定的职业或是在社会上有具体的作用，也各有不同的法律地位、特权和义务。不同种姓之间不仅不能有社交往来、不能结婚，甚至连一起吃饭也被严格禁止。而且这一切除了法律加以规定，还成了宗教神话与仪式的重要部分。</p>
<p>统治者主张，种姓制度反映的是永恒的宇宙现实，而不是历史发展的偶然。印度的宗教将“洁净”和“不洁”视为两大重要概念，也以此作为社会金字塔的根基。虔诚的印度教徒相信与不同种姓的成员接触会造成污染，而且污染的不只个人，甚至还会污染整个社会，也因此这实在是万万不可。然而，这种想法绝非印度教徒所独有。纵观历史，几乎所有社会都会以“污染”和“洁净”的概念来做出许多社会及政治上的区隔，而且各个统治阶级利用这些概念来维系其特权也是不遗余力。只不过，人之所以害怕污染，并非完全只是因为祭司和统治者所捏造出来的神话。可能在人天生的生存本能里，看到可能带着疾病的物体（例如病人或尸体）就会自然产生反感。所以，如果想排挤某一类的人，像是女性、犹太人、吉卜赛人、同性恋、黑人，最好的办法就是大声宣布：这些人有病，会造成污染。</p>
<p>印度种姓制度和相关的“洁净”概念深植于印度文化中。虽然现代印度人早已遗忘了印度–雅利安人入侵的事件，但仍然相信着种姓制度，也同样排斥种姓混合造成的“污染”。当然，种姓并不是完全牢不可破。随着时间过去，现在种姓也发展出许多副种姓（sub-caste）。原本的四个种姓，现在已经变成3000种不同的“迦缔”（jati，意为“出生”），但整个种姓系统的基本原则仍然相同，每个人出生就属于特定的阶级，而破坏阶级就是污染了个人，也污染了整个社会。一个人的迦缔决定了他的职业、他的饮食、他的住处，还有他的结婚对象。一般来说，结婚对象只能来自同一个种姓阶级，而他们的子女也继承同样的阶级。</p>
<p>而只要出现了新的职业或是出现了一群新的人，就得先判断他们属于哪种种姓阶级，才能在印度社会得到认可。而如果有一群人连被认定为种姓阶级都不配，在这个阶级分明的社会里，他们就连在底层也称不上。这种人被叫作“秽多”，他们居住的地方必须和所有其他人分开，活得充满屈辱，只能靠着像是捡拾垃圾的方式维生。就算是种姓阶级最下级的成员，也会尽可能避开他们，不和他们一起吃饭，避免碰触到他们，当然绝不可能与他们通婚。在现代印度，虽然民主政府竭尽全力想打破种姓的区别，告诉印度教徒不同种姓通婚往来不会有什么“污染”，但无论在婚姻还是职业方面，种姓制度的影响仍然挥之不去。47</p>
<p>美洲的“洁净”观念</p>
<p>现代美洲也延续着这种阶级制度的恶性循环。从16到18世纪，欧洲征服者引进数百万名非洲奴隶到美洲做矿奴或农奴。之所以选择非洲而非欧洲或东亚，环境因素有三。第一，非洲与美洲地理接近，所以从塞内加尔进口奴隶比起到越南找人更为容易。</p>
<p>第二，当时非洲已经发展出成熟的奴隶贸易（主要将奴隶出口至中东地区），但蓄奴在欧洲仍然非常罕见。可想而知，从现有市场买个奴隶，要比自己建立整个市场容易得多。</p>
<p>第三，也是最重要的一点，当时美洲的殖民农庄多半位于弗吉尼亚、海地和巴西之类的地区，常有来自非洲的疟疾和黄热病侵扰。非洲人经过世世代代演化，对这些疾病已经发展出部分的免疫力，但欧洲人全无招架之力，一病便倒。因此，农庄主人如果有点聪明，就知道买奴隶或雇用工人的时候该挑非洲来的，而不是欧洲来的。讽刺的是，非洲人在基因上的优势（免疫力）竟造成了他们在社会上的劣势：正因为他们比欧洲人更能适应热带气候，反让他们成了遭到欧洲主人蹂躏的奴隶！由于这些环境因素，美洲的新兴社会也出现了另一个种姓阶级：欧洲白人的统治阶级，以及非洲黑人的奴隶阶级。</p>
<p>但是，没有人会承认他们把某种种族或出身的人当作奴隶只是为了经济利益。就像征服印度的雅利安人一样，欧洲白种人也希望自己在美洲人眼中不只是财大气粗，而是代表着虔诚、公正、客观的形象。于是，这时就要利用种种宗教和科学的虚构故事来找借口。神学家声称非洲人是诺亚的儿子含（Ham）的后代，而诺亚曾诅咒含的后代要做其他兄弟的奴隶。生物学家声称，黑人不如白人聪明，道德感也发展较差。医生也声称，黑人居住环境肮脏，会传播疾病，换句话说，就是种污染的来源。</p>
<p>这些虚构的故事牵动着美洲文化，也影响整个西方文化。即使当初蓄奴的条件早已消失，故事却依然存在。19世纪初，大英帝国认定蓄奴违法，停止了大西洋的奴隶贸易，并在接下来数十年间逐步将蓄奴赶出美洲大陆。值得一提的是，这是史上第一次也是唯一一次有蓄奴社会自愿废除了奴隶制度。然而，就算奴隶已经得到自由，过去作为蓄奴借口的虚构种族故事却挥之不去。无论是种族歧视的法律，或是社会的习俗，都还是维持着种族分离的情形。</p>
<p>于是，这一切形成了一个自为因果、不断自我强化的恶性循环。美国南北战争甫落幕的南方就是一例。美国于1865年通过宪法第十三条和第十四条修正案，前者禁止蓄奴，后者明定不得因种族而剥夺公民权及受法律保护的权利。然而，经过两个世纪的奴役，大多数黑人家庭的经济情况和受教育程度都远远不及白人。于是就算某个黑人在1865年出生于美国南方的亚拉巴马州，他要得到良好教育和高薪工作的机会绝对比不上他的白人邻居。等到19世纪80、90年代，他的孩子出生了，还是得面对一样的问题：家境贫寒、教育缺失。</p>
<p>而且，黑人要面对的问题还不只经济弱势一项。毕竟，亚拉巴马州并不是只有黑人穷，贫穷的白人家庭也不少，不是所有白人都是有钱的农场主人。在当时工业革命和移民潮的推动之下，美国是个流动极度快速的社会，今日穷困潦倒没关系，处处都有一夕致富的机会。这样说来，如果黑人所面对的只有钱的问题，靠着通婚等种种方式，应该很快就能消弭种族之间的鸿沟。</p>
<p>然而，真实的情况并非如此。在1865年，白人（甚至还有许多黑人）完全相信黑人就是比较笨、比较懒、比较暴力、比较放荡，而且不在乎个人卫生，所以黑人就成了暴力、窃盗、强奸和疾病的代名词，换句话说，他们就是污染源。于是，就算有个黑人在1895年的亚拉巴马州奇迹似的接受了良好的教育，想申请像是银行职员这种受尊敬的职位，他录取的机会仍然远远不及白人。“黑人”成了一种印记，人们觉得他们天生就不可靠、懒惰，而且愚笨。</p>
<p>你可能会认为，人们总会渐渐明白这些印记都是虚构的而非事实，随着时间过去，黑人就能够证明自己和白人一样能干、守法、干净。但情况却正相反，随着时间推移，这些偏见只会越来越深。正由于所有最好的工作都在白人手上，人们更容易相信黑人确实低人一等。一个普通的白人很可能会说：“你看，黑人都已经自由这么久了，但几乎所有的教授、律师、医生，甚至是银行出纳员都没什么黑人。这岂不是明白告诉我们，黑人就是没那么聪明，没那么努力吗？”于是，黑人被困在这个恶性循环里，他们申请不到白领的工作，是因为别人以为他们笨，但证明他们笨的，又是因为白领中很少有黑人。</p>
<p>这种恶性循环并非到此为止，反对黑人的势力不断壮大，最后形成“黑人歧视法”（Jim Crow Laws）等等法规，意在维护种族阶级制度。他们规定黑人不准投票，不准读白人学校，不准到白人商店买东西，不准在白人餐厅吃饭，不准到白人旅馆过夜。这一切的理由是认为黑人就是污秽、懒惰、品行不良，所以必须隔离，好保护白人。同样，白人出于害怕疾病，会避开有黑人的旅馆或餐厅；他们害怕孩子受欺负或被带坏，所以也不希望孩子去上有黑人的学校；他们害怕黑人既无知又没道德观，所以不想让黑人在选举中投票。而这些忧虑甚至还有科学研究“证明”在后面撑腰，研究“证明”：黑人平均学历确实较低，得到各种疾病的比率确实较高，而且犯罪率更是远高于白人（但这些研究却忽略了这些“事实”是出于对黑人的歧视）。</p>
<p>恶性循环：某个偶然历史事件，成了僵化的社会制度常规。</p>
<p>到了20世纪中叶，美国南方各州种族隔离的情形甚至比19世纪末期更为恶化。1958年，黑人克雷农·金恩（Clennon King）申请进入密西西比大学就读，竟被强迫关进精神病院就医。当时法官认为，一个黑人一定是疯了，才觉得自己能进得了密西西比大学。</p>
<p>对于当时的美国南方人（和许多北方人）来说，想到黑人男性居然可能和白人女性有性行为甚至结婚，就会觉得这实在是万万难以接受的事。跨种族的性行为是所有禁忌之首，一旦做出这种行为甚至只是涉嫌想有这种行为，不用经过什么审判，就会立刻遭到私刑处置。当时出现的白人至上主义的秘密社团“三K党”（Ku Klux Klan），就曾犯下多起相关杀人事件。讲到维护洁净这件事，他们可是让印度教的婆罗门相形见绌。</p>
<p>随着时间过去，种族主义还蔓延到越来越多的文化领域。例如美国的审美观就是以白人的美丽作为标准，白人的特质就是美丽的标准，浅色的皮肤、金黄的直发、小而翘的鼻子等等。至于典型的黑人特质，例如黝黑的皮肤、蓬松的黑发、扁平的鼻子，则被视为丑陋。这些成见使得原本就由想象建构出来的阶级意识更是进到意识深层，挥之不去。</p>
<p>这样的恶性循环可能持续几百年甚至几千年，让原本只是历史偶发事件形成的阶级制度变得根深柢固。随着时间流逝，不公不义的歧视常常只是加剧而不是改善。富者越富，而贫者越贫。教育带来进一步的教育，而无知只会造成进一步的无知。历史上过去的受害者，很可能会再次受害。而历史上过去的特权分子，他们的特权也很可能依然存在。</p>
<p>大多数社会政治阶级制度其实都没有逻辑或生物学的基础，不过就是由历史的偶然事件引起，再用虚构的故事延续壮大。这正是历史值得研究的一个很好的理由。如果黑人／白人或婆罗门／首陀罗的区别真有生物学事实根据（例如婆罗门的大脑确实比首陀罗的大脑效率高），光靠生物学就应该足以研究人类社会的种种行为。然而事实证明，不同智人群体之间的生物差异其实就是小到能够忽略不计，所以单凭生物学就是无法解释印度社会和美国各种族的互动为何如此复杂。想了解这些现象，我们只能靠着研究事件本身、环境、权力关系，看看人们是怎样将虚构的想象变成了残酷（而且再真实不过）的社会结构。</p>
<p>他和她</p>
<p>不同的社会，想象出的阶级制度也就相当不同。像是现代美国人非常注意种族，但对中世纪的穆斯林来说就无关紧要。在中世纪印度，种姓是生死攸关的大事，但现代的欧洲根本毫不在意。只不过，有某种阶级制度却是在所有已知的人类社会里都有着极高的重要性：性别的阶级。世界各地的人都会区分男女，而且至少在农业革命以降，几乎世界各地都是男人占尽好处。</p>
<p>甲骨文的历史可以追溯到公元前1200年，是中国现存最古老的成熟文字，用来占卜。其中曾有一块的卜辞写着：“妇好娩，嘉？”（商王武丁的妻子妇好即将临盆，是否吉利？）而答复是：“其唯丁娩，嘉；其唯庚娩，弘吉。”（若在丁日分娩，吉；若在庚日分娩，大吉。）然而，卜辞最后的验辞语气十分遗憾：“三旬又一日，甲寅娩，不嘉，唯女。”（31天之后，妇好在甲寅日分娩，不吉，只是个女孩。）48过了三千多年，社会主义体制下的中国制定了计划生育政策，而许多中国家庭仍然觉得生下女儿是种不幸。有些时候，父母还会刻意遗弃甚至杀害女婴，希望能有机会再试一次，看看能不能生出个儿子来。</p>
<p>在许多社会中，妇女只是男人的财产，通常属于她的父亲、丈夫或兄弟。而在许多法律系统中，强奸罪是属于侵犯财产，换句话说，受害人不是被强奸的女性，而是拥有她的男性。因此，这些法律对于强奸罪的救济措施就是所有权移转：强奸犯付出一笔聘金给女方的父亲或兄弟，而她就成了强奸犯的财产。《圣经》还写着：“若有男子遇见没有许配人的处女，抓住她，与她行淫，被人看见，这男子就要拿50舍客勒银子给女子的父亲；因他玷污了这女子，就要娶她为妻。”（《申命记》，22:28–29）对古希伯来人来说，这是个再合理也不过的安排了。</p>
<p>在某些地方，如果是强奸某个不属于任何男人的女人，甚至算不上犯罪。这就像是在人来人往的街道上捡了一枚铜板不算是窃盗一样。另外，如果是丈夫强奸自己的妻子，也不构成犯罪；甚至有地方会认为，因为丈夫本来就该对妻子的性行为有完全的控制权，所以“丈夫强奸妻子”这句话根本无法成立。说丈夫“强奸”妻子，就像说某个人偷了自己的钱包一样不合逻辑。这些说法听来荒谬，但其实并不只有远古中东地区才有这种想法。就算到了2006年，还有53个国家无法控告丈夫强奸了他的妻子。即使在德国，也是到了1997年才修订法案，认定婚姻中可能出现强奸行为。</p>
<p>49</p>
<hr>
<p>那么，将人类分成男女，是不是也像印度的种姓制度或是美国的种族阶级，都是想象下的产物？这一点究竟是不是有深刻的生物学基础，认定男女本来就应有所区分？而如果这确实是一个自然的不同，生物学上又是否能够解释为何男性的待遇优于女性？</p>
<p>在男女之间，某些文化、法律和政治上的差异正反映着两性明显的生物学差异。例如男性没有子宫，所以怀孕生子这件事一直只能是女性的工作。然而，就在这个核心差异上，每个社会又会不断加上一层又一层的文化概念和规范，而这些就和生物学鲜有关联。而各种社会上对于“男性化”和“女性化”特质的想法，多半也没有确实的生物学基础。</p>
<p>举例来说，公元前5世纪的雅典实行民主，但有子宫的人就没有独立的法定地位，无法参加人民议会，也无法担任审判。除了少数例外，这种人也无法得到良好的教育，不能经商，也不能参加哲学讨论。所有雅典的政治领袖、哲学家、演说家、艺术家、商人，没有一个人有子宫。那么，难道“有子宫”这件事，真有什么生物学的根据，证明这些人不适合从事这些行业吗？虽然古雅典人确实这么认为，但现代雅典人可不会同意。在现今的雅典，妇女不仅能够投票，能够参选担任公职，能够发表演讲，能够从事从珠宝到建筑到软件等等一切设计，而且也能够进入大学就读。她们的子宫可没让她们做起这些事来输给男人。确实，女性在政界和商界仍然处于弱势（希腊议会只有12%是女性），但她们要参与政治已经没有法律的阻碍，而且多数现代希腊人也认为女性担任公职合情合理。</p>
<p>此外，许多现代希腊人也认为男人的一个重要特点就是只对女人有“性趣”，而且也只该和异性发生性关系。但他们没发现，“异性性行为自然，同性性行为不自然”这件事也是一种文化偏见，而不是生物学上的事实。事实上，男男相吸这件事，大地之母从来也没什么意见。然而，在某些文化里，如果儿子和隔壁的男孩天雷地火，他的人类母亲可就会大发雷霆。这位母亲会生气，原因可不是出于生物的必然。其实对于许多人类文化来说，同性恋不仅合法，甚至还对社会有所帮助，像古希腊就是最明显的例子，在史诗《伊利亚特》（Iliad）里，英雄阿基利斯（Achilles）与普特洛克勒斯（Patroclus）关系亲密，但阿基利斯的母亲西蒂斯（Thetis）可没什么不高兴。另外，马其顿王国的女王奥林匹亚丝（Olympias）可说是古代最喜怒无常也最大权在握的女性，连她的丈夫腓力二世都死在她手上。但她看到儿子亚历山大大帝带了爱人赫费斯提翁（Hephaestion）回家吃饭，也是没发半点儿火。</p>
<p>我们究竟要如何才能判断，什么是真正在生物学上有所不同，而什么又只是人类说得煞有介事、自找借口？一项黄金法则就是“天生带来允许，文化造成封闭”。天生自然的生物学，可能性几乎无穷无尽。然而，文化却要求必须实现某些可能性，而又封闭了其他可能性。例如女性天生能生小孩，但在某些文化里，女性却是非生不可。生物学上，男人就是能从彼此身上得到性愉悦，但某些文化却极力阻止他们实现这种可能。</p>
<p>文化总会说，它只是禁止“不自然的事”。但从生物学的角度来看，这世界上根本没有什么是不自然的。只要有可能发生的事，就是自然。真正完全“不自然”的事，是指违背了自然规律，但这种事情根本就不会存在，所以也没有禁止的必要。举例来说，没有任何一种文化会“禁止男性进行光合作用”，“禁止女性跑得比光速快”，或是“禁止带负电荷的电子互相吸引”，就是因为这讲了只是白讲，完全没有必要。</p>
<p>事实上，许多人认知的“自然”和“不自然”并不是生物学的概念，而是基督教神学的概念。神学上所谓的“自然”，指的是“符合创造自然的神的旨意”。基督教神学家认为，上帝创造了人的身体，并且让每个肢体和器官都有特定的目的。如果我们使用肢体和器官的方式符合上帝的设想，那就是个“自然”的活动；如果不符合上帝设想的方式，就成了“不自然”。然而，演化本来就没有唯一的目的。器官的演化没有唯一的目的，而器官的使用方式也不断在变化。现在人体的所有器官早在几亿年前就已经出现了原型，而现在所有器官都不只做着原型所做的事。器官之所以演化是为了某种特定功能，但等到器官存在之后，要用作其他功能也并无不可。以嘴巴为例，嘴巴之所以会出现，是因为最早的多细胞生物需要有办法将营养成分送进身体里。而虽然现在嘴巴仍然有这种功能，但我们还能用嘴来说话、亲吻，战士还能用嘴来拔手榴弹的引信。难道，只因为我们最早那些像蠕虫一样的祖先在6亿年前没有用嘴做这些事，嘴巴的这些功能就变得不自然了？</p>
<p>同样，翅膀也不是一开始就成了空气动力学的奇迹，而是从原本有其他用途的器官演化而来。有学者认为，一开始昆虫都不会飞，而翅膀是几百万年前从虫子身上突起的部分演化而来。虫子原本身上会有突起，是因为这样能增加表面积，接收更多阳光，也就更能保持温暖。而在缓慢的演化过程中，这些太阳能接收器越长越大。想要吸收最多阳光，就要让突起的表面积最大、重量最轻；而这种身体结构刚好对昆虫来说也方便，蹦蹦跳跳的时候还能帮上一点忙，突起越大的，就能跳得越远。有些昆虫开始用这玩意儿来滑翔一下，接着只是再跨出一小步，昆虫就真的在空中飞了起来。所以，如果下一次又有蚊子在你耳边嗡嗡不停，记得要骂骂她真是太不自然了。如果她乖乖听话，满足于当初上帝赋予的功能，现在她的翅膀还只能做个太阳能板。</p>
<p>这种多用途、多功能的道理，也同样适用于我们的性器官和性行为。一开始，性行为就是为了繁殖，而求偶仪式则是为了要评估对方的健康程度。但对许多动物来说，两者其实都有众多的社交功能，可不只是为了赶快创造出自己的DNA小拷贝。举例来说，黑猩猩就会用性行为来巩固政治联盟、建立亲密关系、化解紧张局势。难道这也是不自然？</p>
<p>性与性别</p>
<p>所以，坚持女性生小孩才“自然”或者说同性恋“不自然”，其实并没什么意义。各种规定男人就该如何、女人就该怎样的法律、规范、权利和义务，反映的多半只是人类的想象，而不是生物天生的现实。</p>
<p>生物上，人类分为男性和女性。所谓男性（male），就是拥有一个X染色体和一个Y染色体，所谓女性（female）则是拥有两个X染色体。但是要说某个人算不算“男人”（man）或“女人”（woman），讲的就是社会学而不是生物学的概念了。在大多数人类社会里，绝大多数情况下所谓男人就是男性，而女人就是女性，但那些社会学的名称负载了太多意义，而真正与生物学相关的部分少之又少，甚至完全无关。我们说某个智人“够男人”，讲的并不是具有某种生物特质（例如有XY染色体，有睾丸，有睾固酮之类），而是能在所处的社会中，找到一个符合想象秩序的位置。每个文化背后虚构的故事，都有些男人应该要符合的角色（像是搞政治）、拥有的权利（像是投票权），以及负起的义务（像是服兵役）。同样，要说某个智人是不是“够女人”，也不是看她有没有两个X染色体、子宫或是大量的雌激素，而是她在想象建构出的人类秩序中，是个女性的成员。每个社会文化也会用虚构的故事，定出一些女人该符合的角色（像是要养育子女）、拥有的权利（保护不受暴力侵扰），以及负起的义务（服从她的丈夫）。正由于定义男女角色、权利和责任的并不是生物学，而只是虚构的故事，所以每个社会认为“够男人”和“够女人”的意义也就大不相同。</p>
<p>学者为了把概念讲清楚，通常把生物学上的区分称为“性”（sex），而文化上的区分称为“性别”（gender）。“性”区分的是男性和女性，属于客观标准，在整个历史上未曾改变。至于“性别”区分的是男人和女人（某些文化也有其他类别），所谓“够男人”和“够女人”的标准存在于主体之间，而且会不断改变。举例来说，同样在雅典，古代和现代对女人要求的行为、欲望、服饰甚至是身体姿势都有极大不同。</p>
<p>50</p>
<p> 女性=一种生物区别   女性=一种文化区别<br> 古代雅典    现代雅典    古代雅典    现代雅典<br> XX染色体   XX染色体   无权投票    有权投票<br> 子宫      子宫      无权担任法官      有权担任法官<br> 卵巢      卵巢      无权任公职   有权任公职<br> 睾固酮浓度低      睾固酮浓度低      无权自行决定结婚对象      有权自行决定结婚对象<br> 雌激素浓度高      雌激素浓度高      通常不识字   通常识字<br> 有泌乳能力   有泌乳能力   法律上由父亲或丈夫拥有     法律上独立<br> 完全相同    非常不同<br>性的事情好解决，但性别就没那么容易。想成为男性再简单不过，只需要出生的时候有一个X和一个Y染色体就行。想成为女性也是同样容易，出生时有一对X染色体，就大功告成。但相反的是，要当好一个男人或是一个女人，不但过程复杂，而且要求苛刻。正由于“够男人”或“够女人”的标准多半来自文化，而不是天生自然，所以没有什么社会是在人一生下来之后就觉得男性够男人而女性够女人。而且就算得到认可了，也还不能就此松懈。从出生到死亡，男性必须一辈子不断通过各种仪式和表演来证明自己真是条汉子。而女性也永无宁日，必须不断说服自己和其他人自己散发着女人味。</p>
<p>而且，这种成功没得保证。特别是男性，总是很害怕别人觉得自己没有男子气概。在整个历史上，总看到男性愿意冒险犯难甚至牺牲生命，只为了让人夸赞一句：“他是个真正的男人！”</p>
<p>图15 18世纪的男人味：法国国王路易十四王室肖像。请注意路易十四戴着长假发，穿着丝袜和高跟鞋，站得像个芭蕾舞者，还带着一把巨大的剑。这一切在现代美国都会被认为真是个娘娘腔（除了那把剑），但在当时，路易十四可是欧洲男子气概和男人味的典范。</p>
<p>图16 21世纪的男人味：美国总统奥巴马官方照片。那些假发、丝袜、高跟鞋和剑都去了哪？就大权在握的男性而言，这大概是有史以来最呆板沉闷的形象。人类历史上，占主导地位的男人形象多半都是多彩绚丽，像是美洲印第安人酋长就戴着羽毛摇曳的头饰，印度大君也会穿着华丽的丝绸，配着亮眼的钻石。至于在整个动物界里，雄性往往也比雌性更丰富多彩、装饰夸张，像是孔雀的尾巴和狮子的鬃毛。</p>
<p>当男人究竟有什么好的？</p>
<p>至少农业革命以来，大多数人类社会都属于重男轻女的父权社会。不论这些社会对男女的定义为何，当男人总是比较优越。父权社会教育着男人就该是个阳刚的男人样，女人就该有个阴柔的女人款，要是有人斗胆跨越界线，惩罚也就随之而来。但反过来说，如果遵守了这些规范，得到的奖励却是男女大不同。社会通常重视阳刚的特质胜于阴柔的特质，社会中阳刚的典范得到的总是比阴柔的代表多。女人得到的健康和教育资源不如男人，不论在经济、政治，甚至光是迁徙的自由也都逊于男人。性别就像是一场竞赛，但第一第二早已命中注定，有些人甚至只能争个老三。</p>
<p>确实，有极少数的女人坐到了高位，像是埃及艳后克丽奥佩特拉（Cleopatra）、英国的伊丽莎白一世，以及中国的慈禧太后，但她们只是例外，而更证明了这个规则。慈禧在19世纪末统治中国，但当时所有的朝廷大臣都是男人，军队统帅都是男人，判官律吏都是男人，科举考生都是男人，进士翰林都是男人，就连吟诗作对、为文著述、抚琴吹箫、问诊医病、清谈哲思、科学研究也几乎都是男人一手包办。</p>
<p>几乎在所有的农业和工业社会中，父权制都是常态，历经各种政治动荡、社会革命、经济转型，历久不衰。以埃及为例，在过去几个世纪统治权不断换手，历经亚述、波斯、马其顿、古罗马、阿拉伯、马穆鲁克（Mameluk）、土耳其和英国统治，但从头到尾都是父权制。虽然埃及曾用过法老的法律、希腊的法律、古罗马的法律、穆斯林的法律、土耳其的法律和英国的法律，但一直都让所谓“真正的男人”唯我独尊。</p>
<p>正因为父权制是种太普遍的现象，不可能只是某种偶然因素进入了恶性循环所致。特别值得一提的是，在1492年哥伦布抵达美洲之前，美洲和亚洲、非洲的人类数千年内并无往来，但绝大多数社会依然采用的是父权制。如果说在亚洲和非洲的父权制只是出于偶然，难道真的只是凑巧，让阿兹特克和印加也同样采用父权制？一种更有可能的推测是，尽管“男人”和“女人”的定义在各种文化之间有所不同，但有些共通的生物因素，让几乎所有文化都重视阳刚胜过阴柔。我们并不知道真实的原因为何，虽然有各种理论，但没有任何一个真能完全站得住脚。</p>
<p>肌肉理论</p>
<p>最常见的一种理论，是认为男人比女人强壮，于是靠着他们肌肉的力量迫使女人就范。这种理论讲得精致一点，是认为男人力气大，就能独占那些需要较多体力劳动的工作（像是犁地和收割），于是让他们掌握了粮食的生产，进而转化为政治上的影响力。</p>
<p>然而，肌肉理论有两大问题。第一，“男人比女人强壮”只是一般情形，而非人人皆然。而且，强壮分了许多种，像是女人一般来说比男人更能抵抗饥饿、疾病和疲劳，而且也有许多女人能跑得比男人更快，挑得比男人更多。第二，也是这种理论最大的问题，在于整个历史上也有许多不需要什么体力的工作（像是宗教、法律、政治），但女人不但没分到这些工作，反而是在田里、在工厂里、在家庭中从事艰苦的体力劳动。如果社会权力分配看的只是付出体力的多寡，女人该得到的权力绝对远超于现在。</p>
<p>更重要的是，就人类整体来说，体力和社会权力本来就没有直接关联。我们常看到六十几岁的人控制着二十几岁的人，但后者显然体力要好得多。19世纪中叶亚拉巴马州的蓄奴农庄主人，如果和他种棉花的奴隶大打出手，很可能几秒之内就会被撂倒在地上。另外，要遴选埃及的法老王或天主教的教皇，也不是让大家来打一场。在采集社会里，握有政治主导权的人通常是因为社交技巧最为杰出，而不是身上肌肉最为发达。而在黑道组织里，老大常常也不是最强壮的男人，反而是个老头；他根本不用自己出手，肮脏活只要交给更年轻、体力更好的年轻小伙子就行了。如果有哪个小鬼，以为只要把老大干掉自己就能称王，很可能还没动手就已经被杀。就算是黑猩猩，要坐上首领地位靠的也是稳固的集团，而不是盲目的暴力。</p>
<p>事实上，人类历史显示，肌肉的力量和社会的权力还往往是呈反比。在大多数社会中，体力好的反而干的是下层的活。这可能反映着智人在食物链中的位置。如果真的一切只看体力，智人在食物链里就只能处在中间的位置。然而，智人靠着聪明才智和社交技巧，让自己跃升到了食物链的顶端。于是，在智人内部的权力链里，聪明才智及社交技巧也会比体力更重要。正因如此，如果想解释父权制这个历史上影响最广、最稳固不变的阶级制度，要说一切只是因为男人力气大于女人，实在叫人难以相信。</p>
<p>流氓理论</p>
<p>另一种理论认为，男性占有主导地位靠的不是力气，而是好侵略的个性。经过数百万年的演化，让男性的暴力倾向远比女性明显。虽然女性心中也会浮起仇恨、贪婪和欺凌的想法，但流氓理论认为男人更愿意将这些想法付诸实践。正因如此，历史上的各场战争一直就是男人主导。</p>
<p>而正因他们在战争时期掌握了军队，到了太平时期也就成了民间社会的主人。控制了民间社会，就有资源发动更多的战争；发动了越多战争，男人就越能控制社会。正是这样的循环，解释了为什么战争无处不在，而父权制也无处不在。</p>
<p>近年来对于男女荷尔蒙与认知系统的研究也发现，男人的攻击和暴力倾向确实比较明显，平均来说更能胜任一般士兵的角色。然而，就算一般士兵都是男人，是不是就能合理推论也该由男人来运筹帷幄，而且最后享有战争带来的甜美果实？这仍然说不通。这就像说因为所有在棉田里工作的都是黑人，所以棉花农庄的主人也该是黑人一样。既然工人全为黑人的农庄可能有个白人主人，为什么士兵全是男人的军队就不能由女人率领，或者至少在领导阶层里有部分是女人呢？事实上，在整个历史上的许多社会中，许多军方高阶人员都不是从大兵做起，而是直接空降。常常军队的领导人从没当过一天兵，只因为他们是贵族、富人或受过教育，高级将领的荣耀也就落在他们头上。</p>
<p>例如拿破仑的克星威灵顿公爵，他18岁进入英国军队，立刻接受委任成为军官。他根本不把麾下的平民看在眼里。与拿破仑对战期间，他曾写了一封信给另一个贵族，里面提到“我们指挥的那些大兵就是社会没用的渣滓流氓”。这些大兵通常是最贫困的穷人或少数民族（如爱尔兰天主教徒），他们想在军中晋升的机会可以说是微乎其微。那些高阶军职，全部都是公爵、亲王和国王的专利。然而，又为什么只能是公爵，而不能是女爵呢？</p>
<p>法兰西帝国是靠着塞内加尔人、阿尔及利亚人和法国工人阶级的血汗，才建立并捍卫着在非洲的疆域。在这些军队中，出身法国名门的比率可以说是低之又低。但领导军队、统治帝国、享用成果的，这一小撮中法国名门的比率却是高了又高。但同样的问题，为什么这些又都是法国男人，而不是法国女人？</p>
<p>中国长久以来一直有以文人领军的传统，常常将领的出身都是舞文弄墨的，而不是舞刀弄剑的。中文也常有人说“好男不当兵，好铁不打钉”，讲的也是聪明人该去读书而不是从军。但这样说来，为什么所有官职都被男人占走了？</p>
<p>我们并不能说，就因为女人体力较弱、睾固酮浓度较低，就不能做好官职、当好将军、搞好政府。虽然运筹帷幄确实需要一定体力耐力，但不需要力大如牛或是凶残无匹。战争可不是什么单纯的酒吧打架，需要非常复杂的组织、合作和安抚手段。真正胜利的关键，常常是能够同时安内攘外，并看穿他人思维（尤其是敌国的思维）。如果挑个只有蛮力、只想猛攻的人来打仗，常常就是一败涂地。更好的选择，是个能够合作、能够安抚、能够有不同观点的人。真正能建立起帝国的人，做的也就是这种事。像是奥古斯都虽然在军事上的才干远不及恺撒或亚历山大大帝，成就却非前人能及：建立起稳定而长久的帝国。他不但得到当时民众的推崇，也得到现代史学家的赞赏，这些人都认为，他的成就正是由于他具备了温柔宽厚的美德。</p>
<p>一般说来，女人被认为比男人更八面玲珑，更懂得如何安抚他人，而且更能够从不同角度观看事情。如果这些刻板印象至少有部分是事实，那么女人就该是绝佳的政治家和帝国领袖，至于战场上的肮脏活，就交给那些睾固酮爆表、头脑简单四肢发达的肌肉男即可。只不过，虽然这是种很流行的讲法，但现实世界中却很少成真。至于原因，目前仍然不明。</p>
<p>父权基因理论</p>
<p>第三种想要从生物学解释父权制度的理论，并未将重点放在暴力或是蛮力上，而是认为在数百万年的演化过程中，男人和女人发展出了不同的生存和繁殖策略。对男人来说，得要彼此竞争才能得到让女人受孕的机会，所以个体想有繁殖的机会就看他能不能打败对手，比别的男人强。随着时间慢慢过去，传到后世的男性基因也就是那些最具野心、最积极、最好胜的男人。</p>
<p>但另一方面，对女人来说，要找到个愿意让她受孕的男人完全不是问题。但如果说到要让孩子长大成人甚至为她生下孙子孙女，除了得怀胎十月，甚至还得再辛苦许多年，才能把孩子带大。而在这段时间，她要自己取得食物的机会就变少，另外还需要许多人的帮助。所以，她需要有个男人来帮忙。为了确保自己和孩子能够生存下去，女人只好同意男人提出的各种条件，好换取他一直待在身边、分担这个重担。随着时间慢慢过去，传到后世的女性基因也就是那些最顺从、愿意接受他人照顾的女人。至于花了太多时间争权夺利的女人，也就没有机会让那些好胜的基因万世流芳。</p>
<p>根据这个理论，由于有不同的生存策略，男人的基因倾向是野心勃勃、争强好胜，擅长从政经商；女人的基因则倾向趋吉避凶，一生养育子女就心满意足。</p>
<p>只不过，这种理论似乎在实际的证据上也说不通。最有问题的一点在于，这里认为女人需要外部协助的时候需要依赖男人，而不是其他女人，而争强好胜的男人就能在社会上占据领导地位。但有许多种动物（例如大象和倭黑猩猩）虽然也有需要依赖他人的雌性以及争强好胜的雄性，但发展出来的却是母系社会。正由于雌性需要外部帮助，所以它们更需要发展社交技巧，学习如何合作，给予彼此抚慰。于是，它们建构起了全为雌性的社会网络，帮助彼此养育后代。而这个时候，雄性动物还是继续把时间花在彼此战斗争胜，所以社交技巧和社会关系依旧低落。于是，在倭黑猩猩和大象的社会中，便是由互相合作的雌性组成强大的网络，主导全局，至于以自我为中心而又不合作的雄性，只能滚到一边去。虽然雌性的倭黑猩猩一般来说力气不如雄性，但如果雄性的倭黑猩猩做得过火了，就会被成群的雌倭黑猩猩合起来教训一番。</p>
<p>如果倭黑猩猩和大象都做得到这一点，为什么智人做不到？相较之下，智人这种动物的力气又更弱，优势就在于能够大规模合作的能力。如果真是如此，就算女性确实需要依赖他人，而且就算女性确实需要依赖男人，她们也应该能运用较高明的社交技巧来互相合作，进而用策略来操纵打败更具侵略性、更自行其是、更以自我为中心的男人们。</p>
<p>究竟是为什么，在一个以“合作”为成功最大要素的物种里，居然是比较没有合作精神的一方（男人）控制着应该比较善于合作的另一方（女人）？到目前为止，我们还没有很具说服力的答案。也许我们的预设是错的？搞不好，雄性智人的主要特点并不在于体力、侵略性或争强好胜，反而是有更佳的社交技巧，更善于合作？这点在目前仍无定论。</p>
<p>但我们确实知道的是，人类的性别角色在20世纪已有了翻天覆地的变化。现在有越来越多社会让男女在法律、政治和经济上享有平等的地位、权利和机会。虽然性别差距依然显著，但情况正在以惊人的速度改变。1913年，美国有一批妇女站出来为女性要求投票权，当时大众还嗤之以鼻、视为荒唐，但谁想得到，到了2013年，美国最高法院竟有五位大法官（三女两男）投票赞成让同性婚姻合法化，否决了另外四位男性大法官反对的决定？</p>
<p>正是这些戏剧性的变化，让性别的历史叫人看也看不清。现在我们已经清楚看到，父权制度其实并没有生物学上的基础，而只是基于毫无根据的虚构概念。但这么一来，又该怎么解释它为何如此普遍，而且稳固得难以撼动</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第七章</p>
<p>记忆过载<br>演化并没有让人有踢足球赛的能力。确实，演化让人有脚能踢球，有肘能犯规，还有嘴能骂人，但这些加起来，顶多就是让人能自己玩玩球而已。想在某个下午和球场上的陌生人一起来踢场足球赛，不只得和10个可能从未见过面的人合作当队友，还得知道对方11个]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2016/01/08/read1/"/>
    <id>http://yoursite.com/2016/01/08/read1/</id>
    <published>2016-01-08T09:56:51.000Z</published>
    <updated>2016-01-08T03:10:55.000Z</updated>
    <content type="html"><![CDATA[<p>第六章</p>
<p>盖起金字塔<br>农业革命可能是史上最具争议的事件。有些人认为这让人类迈向繁荣和进步，也有人认为这条路终将导致灭亡。对后者来说，农业革命是个转折点，让智人抛下了与自然紧紧相连的共生关系，大步走向贪婪，自外于这个世界。但不管这条路的尽头为何，现在都已经无法回头。进入农业社会之后，人口得以急遽增加，任何一个复杂的农业社会想回到狩猎和采集的生活，就只有崩溃一途。大约在公元前10000年、进入农业时代的前夕，地球上采集者的人口大约有500万到800万。而到了公元1世纪，这个人数只剩下一两百万（主要在澳大利亚、美洲和非洲），相较于农业人口已达2.5亿，无疑是远远瞠乎其后。33</p>
<p>绝大多数的农民都是住在永久聚落里，只有少数是游牧民族。“定居”这件事，让大多数人的活动范围大幅缩小。远古狩猎采集者的活动范围可能有几十甚至上百平方公里。当时这片范围都是他们的“家”，有山丘、溪流、树林，还有开阔的天空。但对农民而言，几乎整天就是在一小片田地或果园里工作，就算回到“家”，这时的房子也就是个用木头、石头或泥巴盖起的局促结构，每边再长也不过几十米。一般来说，农民就会和房屋这种构造建立起非常强烈的连接。这场革命意义深远，除了影响建筑，更影响了心理。在农业革命之后，人类成了远比过去更以自我为中心的生物，与“自己家”紧密相连，但与周遭其他物种画出界线。</p>
<p>新形成的农业活动范围，除了面积远小于过去远古的采集活动范围，内部人工的成分也大增。除了用火，狩猎采集者很少刻意改变他们所漫游闲晃的土地；但农民就完全不同，可以说他们是从一片荒野中，劳心劳力刻意打造出一个专属人类的人工孤岛。他们会砍伐森林、挖出沟渠、翻土整地、建造房屋、犁出犁沟，还会把果树种成整齐的一排又一排。对人类来说，这样人工打造出来的环境就是仅限人类和“我们的”动植物所有，常常还用墙壁和树篱围了起来。农民无所不用其极，一心防止各种杂草和野生动物入侵。就算真的出现闯入者，也会被再赶出去。赶不走的，下一步就是消灭它们。在家园四周，这种防卫特别强。从农业开始发展到现在，人类的家园得面对勤劳的蚂蚁、鬼鬼祟祟的蟑螂、冒险犯难的蜘蛛还有误入歧途的甲虫，于是数十亿人口也就武装起来，用树枝、苍蝇拍、鞋子和杀虫剂，迎向这场永不停止的战争。</p>
<p>史上大多数时间，这些人造领域仍然非常小，四周围绕着广大的自然旷野。整个地球表面约有5.1亿平方公里，其中陆地占了1.55亿平方公里。到了公元1400年，把绝大多数的农民、农作物和家禽家畜全加起来，占地还大约只有1100万平方公里，约全球面积的2%。34而其他地方可能太热、太冷、太干、太湿，不宜农耕。然而，正是地球表面这微乎其微的2%，构成了整个历史展开的舞台。</p>
<p>人类发现自己已经很难离开这些人工岛屿了，所有的房子、田地、谷仓，放弃哪个都可能带来重大的损失。此外，随着时间过去，他们拥有的东西越来越多，不易搬运，也把他们绑得死死的。虽然在我们看来，远古的农民似乎又脏又穷，但当时一个典型的农民家庭，拥有的物品数量已经胜过了一整个儿采集部落。</p>
<p>未来的来临</p>
<p>农业时代人类的空间缩小，但时间却变长了。一般来说，采集者不会花太多心思考虑下周或下个月的事，但农民却会想象预测着未来几年甚至几十年的事。</p>
<p>采集者之所以不管未来，是因为他们就是现采现吃，不管是保存食物还是累积财物，当时都不是容易的事。当然，他们显然还是有某些事得要事先规划。不管是在雪维、拉斯科或是阿尔塔米拉（Altamira）洞穴，这些艺术家绘画的时候想必都希望它能够流传后世。人际关系和政治对立都是长期的事，无论报恩或报仇，常常都要花上好几年的时间。然而，在狩猎和采集这种自给自足的经济里，要做这种长期规划就会受到客观条件的限制。但说来也有趣，这让采集者省下了许多不必要的忧虑。毕竟，如果是那些无法影响的事，就算担心也没用。</p>
<p>而在农业革命之后，“未来”的重要性被提到史上新高。农民不仅时时刻刻都得想着未来，还几乎可以说是为了未来在服务。农业经济是以生产的季节周期为基础，经过很多个月耕作，再来到相对较短的收成高峰期。丰收的时候，农民可能会在收成结束后的晚上欢庆一场，慰劳这段时间的辛劳，但顶多一星期后就又会回到日出而作、日落而息的生活。虽然可能已经有了足够的粮食来应付今天、下周甚至下个月，他们还是得担心明年和后年的问题。</p>
<p>之所以要担心未来，除了有生产季节周期的因素，还得面对农业根本上的不确定性。由于大多数村落拥有的农作物或家禽家畜物种十分有限，一旦遇上旱灾、洪水和瘟疫就容易灾情惨重。于是，农民不得不生产出多于所需的食物，好储备存粮。粮仓里堆了米，地窖里存了橄榄油，食品室里有奶酪，屋梁上还挂着香肠，否则遇到歉收年就有可能会饿死。而且，总有歉收的一年，只是时间早晚而已，如果农民不早做准备，绝对也活不久。</p>
<p>于是，早从农业时代一开始，“未来”就一直是人类心中小剧场的主要角色。在农民得靠雨水灌溉的地方，雨季一开始担心也就开始。每天早上，农民就会凝视着远方，闻闻风的味道，盯到眼睛发酸。那片是云吗？能不能来场及时雨？雨会下得够吗？雨会不会又下得太大，把田里的种子或秧苗都冲走打坏了？而在幼发拉底河、印度河、黄河流域，这里的农民一样忧心忡忡，但看的是河水的高度。他们需要雨季让河面上升，一方面把上游肥沃的土壤冲下来，另一方面引水进入他们庞大的灌溉系统。然而，如果这场洪水让河面涨得太高，又或来的时机不对，田地就会遭到严重破坏，下场与旱灾一样凄惨。</p>
<p>农民担心未来，除了因为有更多东西要保护，也是因为现在有别的方法可以减少风险。他们可以再整一块地，再挖一条灌溉的渠道，再多种一点作物。在夏天，满怀忧虑的农民像工蚁一样疯狂工作，挥汗种着橄榄树，再由他的孩子和孙子把橄榄压成油，这样到了冬天甚至明年，他就能吃到今天想吃的食物。</p>
<p>农业带来的压力影响深远，这正是后代大规模政治和社会制度的基础。但可悲的是，虽然农民勤劳不懈、希望能够保障自己未来的经济安全，但这几乎从来未曾实现。不管在任何地方，都出现了统治者和精英阶级，不仅靠着农民辛苦种出的食粮维生，还几乎全征收抢光，只留给农民勉强可过活的数量。</p>
<p>正是这些征收来的多余食粮，养活了政治、战争、艺术和哲学，建起了宫殿、堡垒、纪念碑和庙宇。在现代晚期之前，总人口有九成以上都是农民，日出而作、胼手胝足。他们生产出来的多余食粮养活了一小撮的精英分子：国王、官员、战士、牧师、艺术家和思想家，但历史写的几乎全是这些人的故事。于是，历史只告诉了我们极少数的人在做些什么，而其他绝大多数人的生活就是不停挑水耕田。</p>
<p>由想象所建构的秩序</p>
<p>靠着农民多生产出来的食物，加上新的运输技术，越来越多的人可以住在一起，先形成村落，再形成城镇，最后成为都市，再由王国或商业网络把它们紧紧相连。</p>
<p>然而，想真正抓住新时代的契机，光靠粮食剩余和交通改善还不够。就算有能力养活某个城镇的一千人或是某个国家的一百万人，还是无法确保这些人都同意如何划分领土和水资源，如何解决争端，以及在干旱或战时该如何应变。而如果对这些事项都无法达成协议，就算大家谷仓满满，还是会冲突不断。史上的场场战争和革命，多半起因都不是粮食短缺。法国大革命领头的是有钱的律师，而不是饥饿的农民。古罗马共和国在公元前1世纪达到权力高峰，舰队从整个地中海运来种种珍宝，就算在他们祖先最疯狂的梦里也意想不到。然而，正是在他们的富庶达到最大值的时候，古罗马的政治秩序崩溃，引来一系列致命的内战。南斯拉夫在1991年的资源完全足以养活所有国民，但依旧解体并引发可怕的浴血战争。</p>
<p>这种灾难的根源在于，人类在几百万年的演化过程中，一直都只是几十人的小部落。从农业革命之后，不过短短几千年就出现了城市、王国和帝国，但时间并不足以让人类发展出能够大规模合作的本能。</p>
<p>虽然人类在采集时代也没有这种合作的生物本能，但因为有共同的神话故事，几百个陌生人就能够互相合作。然而，这种合作毕竟比较松散而有限，各个智人部落还是各自生活，也能满足大多数智人的自身需要。如果两万年前有个社会学家，完全不知道农业革命后的事情，就很有可能认为种种虚构神话故事的用途相当有限。讲到祖灵、讲到部落图腾，或许已经足以让500人愿意用贝壳交易、举办某种庆典或是联手消灭某个尼安德特人的部落，但也就如此而已了。这位远古社会学家不可能想到，靠着虚构的故事还能让几百万互不相识的人每天合作。</p>
<p>但事实就是如此出乎意料。现在看来，虚构故事的力量强过任何人的想象。农业革命让人能够开创出拥挤的城市、强大的帝国，接着人类就开始幻想出关于伟大的神灵、祖国、有限公司的故事，好建立起必要的社会连接。虽然人类的基因演化仍然一如既往慢如蜗牛，但人类的想象力却是极速奔驰，建立起了地球上前所未有的大型合作网络。</p>
<p>在大约公元前8500年，全球最大的聚落大概就是像杰里科这样的村落，大概有几百个村民。而到了公元前7000年，位于今日土耳其的加泰土丘（Çatal Höyük）城镇大约有5000到10000人，很可能是当时世界上最大的聚落。再到了公元前5世纪到公元前4世纪，肥沃月湾（Fertile Crescent）一带已经有了许多人口达万人的城市，而且各自掌理着许多附近的小村庄。在公元前3100年，整个下尼罗河谷统一，成为史上第一个埃及王朝，法老王统治的领土有数千平方公里辽阔，人民达数十万。大约在公元前2250年，萨尔贡大帝（Sargon the Great）建立起第一个帝国：阿卡德帝国，号称拥有超过100万的子民，常备军队达5400人。在公元前1000年到公元前500年之间，在中东开始出现大型帝国：亚述帝国、巴比伦帝国和波斯帝国。这些帝国统治人数达数百万，军队人数也有上万人。到了公元1年，古罗马统一了整个地中海地区，纳税人口达1亿。有了这些钱，古罗马得以维持人数达25万到50万的常备军，架构完善的交通网络，在1500年后仍然在使用，另外还有到现在仍令人赞叹的剧院和露天剧场。</p>
<p>其他地区也各自有其社会发展和政治统一的过程。例如在东亚，大约在公元前7000年，开始在黄河流域出现小村落，最后在公元前221年由秦始皇统一天下。秦朝约有4000万人，税收得以支持数十万士兵，以及共有超过十万官员的复杂朝廷系统。</p>
<p>确实，这种种都令人印象深刻，但我们不该有太美好的幻想，以为在法老王时代的埃及或是在秦朝的“大型合作网络”就已十分完美。“合作”听起来应该十分无私而且利他，但这件事并不总是出于自愿，而且还更少能够公平。大多数的人类合作网络最后都成了压迫和剥削。在这种新兴的合作网络里，农民交出他们辛苦工作得来的多余粮食，但帝国的收税官只要大笔一挥，就可能让他们一整年的辛劳都化为乌有。像是古罗马著名的圆形剧场，常常是由奴隶所建造，让有钱有闲的古罗马人观赏由奴隶上演的神鬼战士秀。就连监狱和集中营也算是合作网络，要不是有数千名互不相识的人用了某些方式来管理协调彼此的行动，这些网络根本不可能运作。</p>
<hr>
<p>所有这些合作网络，不管是古代美索不达米亚的城市，还是秦朝和古罗马的帝国，都只是“由想象所建构的秩序”。支持它们的社会规范既不是人类自然的天性本能，也不是人际的交流关系，而是他们都相信着共同的虚构神话故事。</p>
<p>虚构的故事是怎么支撑着整个帝国？我们已经讨论过一个这样的例子：标致公司。现在我们可以来看看另外两个史上最有名的虚构故事：第一个是大约在公元前1776年的《汉谟拉比法典》，这可以说是几十万古巴比伦人的合作手册；第二个是公元1776年的美国《独立宣言》，这可以说是现代数亿美国人的合作手册。</p>
<p>在公元前1776年，巴比伦是当时最大的城市，而巴比伦帝国也很可能是当时最大的帝国，子民超过百万，统治着大半的美索不达米亚平原，包括现代大半的伊拉克地区和部分的叙利亚和伊朗。现在最有名的巴比伦国王就是汉谟拉比，而他有名的原因，主要就在于以他命名的《汉谟拉比法典》。这部法典汇集各种律法和判例，希望将汉谟拉比塑造为一个正义国王的榜样，作为更一致的法律体系基础，并且教育后世子孙何为正义，正义的国王又该如何行事。</p>
<p>后世子孙确实看到了。远古美索不达米亚平原的知识分子与官僚精英将这部法典奉为经典，就算等到汉谟拉比骨已成灰，巴比伦帝国也烟消云散，这部法典还是由文士不断抄写流传。因此，想认识古代美索不达米亚人对于社会秩序的理想，《汉谟拉比法典》是个很好的参考来源。35</p>
<p>法典开头指出，美索不达米亚的几位大神安努（Anu）、恩利尔（Enlil）和马杜克（Marduk）任命汉谟拉比“在这片土地伸张正义，驱除不义罪恶，阻绝恃强凌弱”36。接着，法典列出大约300条判例，固定写法是“如果情形如何如何，判决便应如何如何”。以下举出判例196~199和209~214：</p>
<ol>
<li>若某个上等人使另一个上等人眼瞎，便应瞎了他的眼。</li>
<li>若他使另一个上等人骨折，便应打断他的骨。</li>
<li>若他使某个平民眼瞎或骨折，他应赔偿60舍客勒（shekel，约8.33克）的银子。</li>
<li>若他使某个上等人的奴隶眼瞎或骨折，他应赔偿该奴隶价值的一半（以银子支付）37。</li>
<li>若某个上等人殴打一个上等女子、造成她流产，他应赔偿她10舍客勒的银子。</li>
<li>若该女子丧命，他们应杀了他的女儿。</li>
<li>若他殴打某个平民女子、造成她流产，他应赔偿她5舍客勒的银子。</li>
<li>若该女子丧命，他应赔偿30舍客勒的银子。</li>
<li>若他殴打某个上等人的女奴隶、造成她流产，他应赔偿2舍客勒的银子。</li>
<li>若该女奴丧命，他应赔偿20舍客勒的银子。38<br>列举他的判决后，汉谟拉比再次宣告：</li>
</ol>
<p>以上是干练有能的国王汉谟拉比所做出的公正裁决，指示着这片土地朝向真理的道路、人生的正途……我是汉谟拉比，高贵的国王。恩利尔神将人类子民交付给我照护，马杜克神将人类子民交付给我带领，而我悉心关怀、不曾轻忽。39</p>
<p>《汉谟拉比法典》认为，巴比伦的社会秩序根源于由神所指示、普遍且永久的正义原则。这里的阶级结构原则至关重要，将所有人类分成男女两种性别，以及上等人、平民和奴隶三种阶级；性别和阶级不同，价值也就天差地别。像是一个平民女性值30舍客勒的银子，一个女奴隶只值20舍客勒，但光是平民男性的一只眼睛就值60舍客勒的银子。</p>
<p>《汉谟拉比法典》也有严格的家庭阶级制度，根据规定，小孩并不是独立的人，而是父母的财产。因此，如果一个上等人杀了另一个上等人的女儿，惩罚就是把凶手的女儿给杀了。这对我们看来可能荒谬至极，凶手本人逍遥自在，但他无辜的女儿却得赔上一命。但在汉谟拉比和当时的巴比伦人看来，这再公平正义不过。《汉谟拉比法典》背后的一项重要假设，就是只要国王的臣民全部接受各自的阶级角色、各司其职，整个帝国上百万的人民就能有效合作。这么一来，这个社会不但能为所有成员生产足够的粮食、有效分配，还能保护国家抵抗敌人，甚至是扩张领土，好取得更多财富、更多安全保障。</p>
<p>汉谟拉比去世3500年后，北美13个英国殖民地的民众认为英国国王对待他们不公，于是各殖民地代表群聚费城，于1776年7月4日宣布，所有殖民地的民众不再是英国王室的子民。美国的《独立宣言》宣告自己是普遍和永恒的正义原则，而这则宣言也像《汉谟拉比法典》一样找了神祇来背书。然而，美国神指示的至高原则，却似乎和巴比伦神指示的有所出入？美国《独立宣言》主张：</p>
<p>我们认为下面这些真理是不言而喻的：人人生而平等，造物者赋予他们若干不可剥夺的权利，其中包括生命权、自由权和追求幸福的权利。</p>
<p>一如《汉谟拉比法典》，美国《独立宣言》也承诺着如果人类依照其中规定的神圣原则行事，数百万的民众就能彼此合作无间、生活安全和平、社会公平且繁荣。和《汉谟拉比法典》一样，美国《独立宣言》的效力不仅限于当时当地，而是让后世子孙依然奉为圭臬。现在已经过了超过两百年，但美国学童仍然要抄写、背诵这份宣言。</p>
<p>这两份文本让我们左右为难，不管是《汉谟拉比法典》还是美国《独立宣言》，都声称自己说的是普遍且永恒的公平正义原则，但美国人认为所有人都是平等的，而巴比伦人显然并不这样认为。但事实上，他们都错了。不管是汉谟拉比还是美国的开国元勋，心中都有个想象的现实，想象着这个世界有着放诸四海皆准、永恒不变的正义原则（例如平等或阶级），但这种不变的原则其实只存在于智人丰富的想象力里，只存在于他们创造并告诉彼此的虚构故事中。这些原则，从来就没有客观的正确性。</p>
<p>对我们来说，听到要把人分成“上等人”或“平民”，大概都会同意这只是一种想象。但其实，即使说的是“人人平等”，也只是虚构的概念。到底所谓人人平等是什么？除了想象中之外，有没有什么客观的事实可以说我们人人平等？人类彼此在生物学上都相等吗？从生物学的角度，我们再重新看一次美国《独立宣言》里最著名的段落：</p>
<p>我们认为下面这些真理是不言而喻的：人人生而平等，造物者赋予他们若干不可剥夺的权利，其中包括生命权、自由权和追求幸福的权利。</p>
<p>一开始，英文讲到人人生而平等用的词是“create”（创造），但生物学并没有“创造”，而是演化。演化铁定没有“平等”这回事，所谓平等的概念，是与“创造”的概念紧密相关。美国人的“平等”观念来自基督教，基督教认为每个人的灵魂都是由上帝创造，而所有灵魂在上帝面前一律平等。但是，如果我们不相信基督教那一套关于上帝、创造和灵魂的神话故事，那所谓人人“平等”究竟是什么意思？演化的基础是差异，而不是平等。每个人身上带的基因码都有些许不同，而且从出生以后就接受着不同的环境影响，发展出不同的特质，导致不同的生存概率。“生而平等”其实该是“演化各有不同”。</p>
<p>而根据生物学，人并不是“创造”出来的，自然也就没有“造物者”去“赋予”人类什么。个体诞生的背后就只是盲目的演化过程，而没有任何目的。所以“造物者赋予”其实就只是“出生”。</p>
<p>同样，生物学上也没有“权利”这种事，只有各种器官、能力和特性。鸟类会飞就是因为它们有翅膀，可不是因为有什么“飞的权利”。此外，这些器官、能力和特性也没有什么“不可剥夺”的问题，它们常常会不断突变，还可能在一段时间后完全消失。例如鸵鸟，就是失去了飞行能力的鸟类。所以，“不可剥夺的权利”其实是“可变的特性”。</p>
<p>那我们要问，究竟人类演化有什么特性？“生命”倒是毋庸置疑，不过“自由”又是怎么回事？生物学可不讲自由这种东西。“自由”就像是“平等”、“权利”和“有限公司”，不过是人类发明的概念，也只存在于人类的想象之中。从生物学的角度来看，要说人类在民主社会是自由的，而在独裁统治下是不自由的，这点完全没有意义。最后，“幸福”又是什么？到目前为止，生物学研究还是没办法为“幸福”明确下个定义，也没办法客观测量“幸福”。大部分的生物研究都只认可“快感”确实存在，也能有比较容易的定义和测量方式。所以，“生命权、自由权和追求幸福的权利”其实只是“生命和追求快感”。</p>
<p>因此，我们来看看美国《独立宣言》改用生物学、科学的角度来写该是如何：</p>
<p>我们认为下面这些真理是不言而喻的：人人演化各有不同，出生就有某些可变的特性，其中包括生命和追求快感。</p>
<p>上面这段推论过程，如果是平等权和人权的激进分子看到可能会大发雷霆，大声驳斥：“我们知道人在生物学上不相等！但是如果大家都相信人人在本质上平等，就能创造出一个稳定繁荣的社会。”这点我完全赞成，但这正是我所说“由想象所建构的秩序”。我们相信某种秩序，并非因为它是客观的现实，而是因为相信它可以让人提升合作效率、打造更美好的社会。这种由想象所建构的秩序绝非邪恶的阴谋或是无用的空谈，而是唯一能让大群人类合作的救命仙丹。但也别忘了，汉谟拉比也可以用同样的逻辑来捍卫他的阶级原则：“我知道所谓上等人、平民和奴隶在本质上其实并没有什么不同。但如果我们这么相信，就能创造出一个稳定繁荣的社会。”</p>
<p>真正的坚信者</p>
<p>很多读者读到上面这一节，可能都觉得如鲠在喉。毕竟那就是我们中的多数人今天所接受的教育。我们说《汉谟拉比法典》是虚构故事，并不会觉得难以接受，但说到人权也只是虚构的故事，听来就有些刺耳。如果大家都发现人权不过是种想象，岂不是社会就要崩溃了吗？讲到“神”的概念，伏尔泰就曾说：“世界上本来就没有神，但可别告诉我的仆人，免得他半夜偷偷把我宰了。”汉谟拉比对于阶级原则、美国国父杰斐逊对于人权，应该也都会说出一样的话。智人并没有什么与生俱来的权利，就像蜘蛛、鬣狗和黑猩猩也都是如此。但可别告诉我们的仆人，免得它们半夜偷偷把我们宰了。</p>
<p>这种担心其实很有道理。自然界的秩序是稳定不变的，就算人类不再相信世界上有重力，重力也不会一夜之间就消失。但相反的是，想象所建构出来的秩序总是有一夕崩溃的风险，因为这些秩序背后靠的都是虚构的故事，只要人们不再相信，一切就风云变色。为了维持想象建构出来的秩序，必须持续投入大量心力，甚至还得掺入些暴力和胁迫的成分。像是为了让民众不违反想象建构的秩序，国家就需要有军队、警察、法院和监狱不分昼夜发挥作用。如果一个古巴比伦人让邻居眼睛瞎了，想要执行“以眼还眼”的规定，就不得不有些暴力的措施。而在1860年，大部分美国公民已经认为黑奴也是人，必须享有自由的权利，这时也是靠着血流无数的一场内战，才让南方各州只能黯然接受。</p>
<p>然而，光靠暴力还不足以维持由想象所建构出来的秩序，我们另外还需要一些真正坚信如此的信徒。法国政治家塔列朗（Charles Maurice de Talleyrand-Périgord）的政治生涯就像条变色龙，先是路易十六的臣子，再经过革命和拿破仑政权，又抓准时机再次投诚，回到君主制的政体。他曾总结自己几十年任职的经验，表示“刺刀确实可以做很多事，但想安心地依靠它可是不太容易”。很多时候，一名牧师的效果大过一百个士兵，而且更便宜、更有效。此外，不管刺刀多有效，总得有人来刺。如果士兵、狱卒、法官和警察根本不相信某个想象建构的秩序，他们又怎么会照办？在所有的人类集体活动中，最难组织推动的就是暴力活动。如果说社会秩序是由武力来维持，立刻就会碰上一个问题：那军队秩序是由什么来维持？想靠威胁来维持军队组织显然不太可行。至少必须有某些军官和某些士兵真正相信某些事情，不管是上帝、荣誉、祖国、男子气概，或是单纯相信金钱也成。</p>
<p>另一个更有趣的问题，是关于那些站在社会金字塔顶端的人。如果他们并不相信这些想象的秩序，他们又为什么要推动这种秩序呢？常有人说这些人其实什么都不信，只是贪婪而已。但这种说法有问题。如果真的是什么都不信（像是犬儒学派），就很难是个贪婪的人，毕竟客观来说，只是单纯要满足智人的基本生理需求并不难。而满足基本需求之后，多余的钱就可以用来盖金字塔、到世界各地度假、资助竞选活动、提供资金给你最爱的恐怖组织或是投入股市再赚更多的钱，但对真正的犬儒主义者来说，这一切贪婪的事都毫无意义。创立犬儒学派的希腊哲学家第欧根尼（Diogenes），就住在一个桶里。据说有一天他正在做日光浴，当时权倾天下的征服者亚历山大大帝来找他，想知道他是否需要些什么，而且保证自己会尽力协助。第欧根尼回答：“确实，有件事可以请你帮个忙。麻烦你移动一下，别再挡住我的阳光。”</p>
<p>正因如此，犬儒主义者不可能建立起帝国，而且如果人们希望某个由想象建构出的秩序能维持久远，大部分的人（特别是大部分的精英分子）就必须真正相信它。如果不是大多数中国人都相信仁义礼智信，儒家思想绝不可能持续了两千多年。如果不是大多数的美国总统和国会议员都相信人权，美国的民主也不可能持续了250年。如果不是广大的投资人和银行家都相信资本主义，现代经济体系连一天也不可能继续存在。</p>
<p>监狱的高墙</p>
<p>不管是基督宗教、民主还是资本主义，都只是由想象所建构出来的秩序。而要怎样才能让人相信这些秩序？第一，对外的说法绝对要坚持它们千真万确、绝非虚构。永远要强调，这种维持社会稳定的秩序是个客观事实，是由伟大的神或是自然的法则所创造。如果要说人人不平等，不是因为汉谟拉比自己这么说，而是因为恩利尔和马杜克这两位神的旨意。如果要说人人平等，也不是因为托马斯·杰斐逊自己这么说，而是因为这是上帝造人的方式。如果要说自由市场是最好的经济制度，不是因为亚当·斯密（Adam Smith）自己这么说，而是因为这是自然不变的规律。</p>
<p>第二，在教育上也要彻底贯彻同一套原则。从人出生的那一刻起，就要不断提醒他们这套想象建构出来的秩序，要在一切事物中融入这套原则，不管是童话、戏剧、绘画、歌曲、礼仪、政治宣传、建筑、食谱还是时尚。举例来说，我们现在相信平等的概念，所以富人家的子弟穿起牛仔裤，觉得这是种时尚。一开始，牛仔裤是工人阶级的打扮，而如果是在相信阶级制度的中世纪，欧洲人绝对不可能有哪个年轻贵族去穿上农民的工作服装。在当时，“先生”（Sir）或“女士”（Madam）是贵族专属的特权称谓，甚至常常还得通过许多牺牲才能取得。但到了现在，不管信件的收件人是谁，开头的称谓一律都是“亲爱的某某先生／女士”（Dear Sir or Madam）。</p>
<p>不论是人文科学还是社会科学，人们都已经花了大把精力来解释这些想象建构的秩序会如何融入我们的生活。但这里篇幅有限，只能简单一谈。有三大原因，让人类不会发现组织自己生活的种种秩序其实是想象：</p>
<ol>
<li>想象建构的秩序深深与真实的世界结合。</li>
</ol>
<p>虽然这些想象建构的秩序只存在于我们的脑海里，但它可以与真实的世界紧紧结合、密不可分。像是今天大多数西方人都相信个人主义，认为每个人都是独立的个体，有独立的价值，而不受他人看法的影响。换句话说，就好像我们每个人都有自己的一道光照亮我们，让我们的生活有价值、有意义。在现代西方学校里，老师和家长会告诉小孩，受到同学嘲笑并不用太在意，因为只有他们自己知道自己的真正价值，别人不见得了解。</p>
<p>除此之外，这种由想象建构的虚构故事还落实到了现代建筑之中。像是理想的现代建筑会将房屋分成许多小房间，让每个孩子都能有私人空间，不用曝露在他人的目光之下，能有最大的自主权。这种私人房间几乎一定有门，而且许多家庭不只允许小孩关门，甚至还能上锁，就连父母想进去，都得先敲敲门得到允许才成。小孩对自己房间的装饰可以随心所欲，墙上可以贴着摇滚明星的海报，也可以满地丢着脏袜子。如果在这样的空间里成长，任何人都会觉得自己就是个“个体”，觉得自己的真正价值是由内而外的，而不是他人所赋予的。</p>
<p>然而，像是中世纪的贵族就没有个人主义这一套。他们认为，个人的价值是由社会阶级、由他人的看法所决定。在这种情形下，“被别人嘲笑”就成了莫大的侮辱。而当时的贵族也会告诉孩子，要不惜一切代价来保护名声。同样，中世纪想象中的价值体系也反映在当时实际的城堡建筑上。一座城堡几乎不可能有儿童房（就算是成人也很少有个人的房间）。例如，如果是个中世纪男爵的儿子，城堡里的二楼不会有他自己的房间，他如果崇拜狮心王理查或阿瑟王，也没办法把他们的海报贴在自己的墙壁上，当然什么可以上锁的门就更别谈了。他睡觉的地方跟其他许多年轻人一样，就是在宽敞的大厅里。所以可以说他总是活在众人的目光下，总是得注意别人的观感和意见。如果在这种环境下长大，自然就会觉得：个人的真正价值是由他的社会阶级以及他人对他的看法而定。</p>
<p>40</p>
<ol>
<li>想象建构的秩序塑造了我们的欲望。</li>
</ol>
<p>多数人很难接受自己的生活秩序只是虚构的想象，但事实是我们从出生就已经置身于这种想象之中，而且连我们的欲望也深受其影响。于是，个人欲望也就成为虚构秩序最强大的守护者。</p>
<p>例如现代西方人最重视的那些欲望，都是建构在已经为时数百年的虚构故事上，包括浪漫主义、民族主义、资本主义以及人文主义。我们常常告诉朋友要“随心所欲”，但这里的“心”就像是个两面间谍，听从的常常是外面那些主流的虚构故事。于是“随心所欲”不过也只是结合了19世纪浪漫主义与20世纪的消费主义，再植入我们的脑海罢了。以可口可乐公司为例，旗下雪碧的广告词就是：“相信你的直觉，顺从你的渴望。”</p>
<p>甚至那些人们以为深深藏于自己内心的渴望，通常也是受了想象秩序的影响。例如，许多人都很想到国外度假。然而，这件事并没有什么自然或是明显的道理。像是黑猩猩的首领可不会想要运用权力让自己到隔壁黑猩猩的领土上度个假。而像古埃及的法老王，也是把所有财富拿来建造金字塔，把自己的遗体做成木乃伊，而不会有人想要去巴比伦瞎拼或是去腓尼基滑雪。现代人之所以要花费大把银子到国外度假，正是因为他们真正相信了浪漫的消费主义神话。</p>
<p>浪漫主义告诉我们，为了要尽量发挥潜力，就必须尽量累积不同的经验。必须体会不同的情感，尝试不同的关系，品尝不同的美食，还必须学会欣赏不同风格的音乐。而其中最好的一种办法，就是摆脱日常生活及工作，远离熟悉的环境，前往遥远的国度，好亲身“体验”不同的文化、气味、美食和规范。我们总会不断听到浪漫主义的神话，告诉我们“那次的经验让我眼界大开，从此整个生活都不一样了”。</p>
<p>消费主义告诉我们，想要快乐，就该去买更多的产品、更多的服务。如果觉得少了什么，或是有什么不够舒服的地方，那很可能是该买些什么商品（新车、新衣服、有机食品），或是买点什么服务（清洁工、心理咨询、瑜伽课）。就连每一则电视广告，也都是个小小的虚构故事，告诉你买了什么产品或服务可以让日子更好。</p>
<p>鼓励多元多样的浪漫主义又与消费主义一拍即合，两者携手前行，催生了贩卖各种“体验”的市场，进而推动现代旅游产业发展。旅游业真正卖的可不是机票和饭店房间，而是旅游中的经验。所以这样说来，巴黎的重点不是城市，印度的重点也不是国家，而是它能提供的经验；之所以要买经验，是因为据说这样就能拓展我们的视野、发挥我们的潜力，并且让我们更快乐。也因此，如果有个百万富翁和太太吵架，和好的方式很可能就是带她去巴黎旅游旅游。这种做法让我们看到的并不是某种个人的欲望，而是他深深坚信着浪漫的消费主义。如果是古埃及有钱人和太太吵架，带着她去巴比伦度个假绝对不会是选项，反而可能是为她建个她梦寐以求的华丽陵墓，那才会让她心花朵朵开。</p>
<p>一如古埃及精英分子，现在大多数人一生汲汲营营，也都是想盖起某种金字塔，只不过这些金字塔在不同文化里会有不同的名字、形体和规模罢了。举例来说，可能是一栋近郊的独栋透天别墅，有游泳池和大庭院，也可能是一个闪闪发光的高楼公寓，有着令人屏息的美景。但很少人会真的去问，究竟为什么我们会开始想建这些金字塔？</p>
<ol>
<li>想象建构的秩序存在于人和人之间思想的连接。</li>
</ol>
<p>就算假设借着某些超自然的力量，我让自己的欲望跳脱出了这个由想象建构的秩序，但我还是只有自己一个人。想要改变这个秩序，我还得说服数百万的陌生人都和我合作才行。原因就在于：想象建构的秩序并非个人主观的想象，而是存在于主体之间（inter-subjective），存在于千千万万人共同的想象之中。</p>
<p>要了解这一点，我们必须解释一下“客观”、“主观”和“主体间”的不同。</p>
<p>“客观”事物的存在，不受人类意识及信念影响。例如“放射线”，就不是一个虚构的故事。早在人类发现放射线之前，放射线就已经存在；而且就算有人不相信有放射线存在，还是会受到它的伤害。像是发现放射线的居里夫人，就没想过多年研究放射性物质会伤害她的身体。虽然她不相信放射线会对她有害，最后她还是死于因为过度暴露于放射性物质而造成的再生障碍性贫血。</p>
<p>“主观”事物的存在，靠的是某个单一个人的意识和信念。如果这个人改变了自己的信念，这项主观事物也就不复存在或是跟着改变。像是许多小孩都会想象自己有个只有自己看得到、听得着的朋友。这个想象中的朋友只存在于孩子的主观意识中，等孩子长大、不再相信，这个朋友也就烟消云散。</p>
<p>“</p>
<p>主体间”事物的存在，靠的是许多个人主观意识之间的连接网络。就算有某个人改变了想法，甚至过世，对这项事物的影响并不大。但如果是这个网络里面的大多数都死亡或是改变了想法，这种“主体间”的事物就会发生改变或是消失。之所以会有事物存在于主体之间，其目的并不是想存心骗人，也不是只想打哈哈敷衍。虽然它们不像放射线会直接造成实质影响，但对世界的影响仍然不容小觑。历史上有许多最重要的驱动因素，都是这种存在于主体之间的概念想法：法律、金钱、神、国家。</p>
<p>让我们再次以标致汽车作为例子。这家公司并不是标致执行长自己心中想象出来的朋友，而是存在于数百万人心中的共同想象。这位执行长之所以能相信公司存在，是因为董事会也这么相信，公司请的律师也这么相信，办公室里的同人也这么相信，银行人员也这么相信，证券交易所的业务员也这么相信，还有从法国到澳大利亚的汽车经销商，大家都是这么相信的。如果某一天，执行长自己不相信标致汽车存在了，他很快就会被送到最近的精神病院，还会有人来他的位子接班。</p>
<p>同样，不论是美元、人权还是美国，都是存在于数十亿人的共同想象之中，任何一个独立的个体并无力撼动这些概念。就算我自己下定决心不再相信美元、人权和美国，也无法造成任何改变。正因为这些由想象建构的秩序是存在于主体之间，想要改变这些秩序，就得同时改变数十亿人的想法，这绝非易事。想要达到这种规模的改变，必然需要有复杂的组织在背后协助，可能是政党，可能是思潮运动，也可能是某个宗教教派。然而，为了建立这种复杂的组织，人们就得说服许多陌生人共同合作，而这又得靠着他们都相信另一些共同的虚构故事才行得通。由此可见，为了改变现有由想象建构出的秩序，就得先用想象建构出另一套秩序才行。</p>
<p>举例来说，想解决掉标致汽车，我们就需要想象出更强大的东西，像是法国的法律制度。而想解决掉法国的法律制度，我们又需要想象出更强大的东西，像是法国国家的力量。而如果想解决的是法国，就还得再想象出更强大的才行。</p>
<p>身为人类，我们不可能脱离想象所建构出的秩序。每一次我们以为自己打破了监狱的高墙、迈向自由的前方，其实只是到了另一间更大的监狱，把活动范围稍稍加以扩大。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第六章</p>
<p>盖起金字塔<br>农业革命可能是史上最具争议的事件。有些人认为这让人类迈向繁荣和进步，也有人认为这条路终将导致灭亡。对后者来说，农业革命是个转折点，让智人抛下了与自然紧紧相连的共生关系，大步走向贪婪，自外于这个世界。但不管这条路的尽头为何，现在都已经无]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 微信支付与支付宝的集成]]></title>
    <link href="http://yoursite.com/2016/01/08/2016-01-06/"/>
    <id>http://yoursite.com/2016/01/08/2016-01-06/</id>
    <published>2016-01-08T05:44:59.000Z</published>
    <updated>2016-01-08T05:44:59.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u5FAE_u4FE1"><a href="#u5FAE_u4FE1" class="headerlink" title="微信"></a>微信</h2><p><strong>参考地址</strong></p>
<ul>
<li><a href="http://kf.qq.com/faq/120911VrYVrA150906F3qqY3.html" target="_blank" rel="external">开通准备</a></li>
<li><a href="https://pay.weixin.qq.com/wiki/doc/api/app.php?chapter=8_1" target="_blank" rel="external">微信文档</a></li>
<li><a href="https://github.com/jasl/wx_pay" target="_blank" rel="external">wx_pay</a></li>
<li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="external">Alamofire</a></li>
</ul>
<h3 id="u670D_u52A1_u5668_3A_Ruby_on_Rails"><a href="#u670D_u52A1_u5668_3A_Ruby_on_Rails" class="headerlink" title="服务器: Ruby on Rails"></a>服务器: Ruby on Rails</h3><hr>
<p><strong>配置</strong></p>
<p>使用了Gem: <a href="https://github.com/jasl/wx_pay" target="_blank" rel="external">wx_pay</a><br>在Gemfile中添加:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">'wx_pay'</span></span><br></pre></td></tr></table></figure></p>
<p>在config/initializers/下的ruby文件中添加配置<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">"wx_pay"</span></span><br><span class="line"></span><br><span class="line"><span class="constant">WxPay</span>.appid = <span class="string">'微信应用id'</span></span><br><span class="line"><span class="constant">WxPay</span>.mch_id = <span class="string">'微信商户id'</span></span><br><span class="line"><span class="constant">WxPay</span>.key = <span class="string">"微信应用的key"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文档地址: https://pay.weixin.qq.com/wiki/doc/api/app.php?chapter=4_3</span></span><br><span class="line"><span class="comment"># 从微信平台上下载的p12证书的默认密码为你的商户id</span></span><br><span class="line"><span class="comment"># 重设密码: Mac上可以先用密钥工具打开p12证书 然后再导出 并且添加新的密码</span></span><br><span class="line"><span class="constant">WxPay</span>.set_apiclient_by_pkcs12(<span class="constant">File</span>.read(<span class="string">"<span class="subst">#&#123;<span class="constant">Rails</span>.root&#125;</span>/p12文件的路径"</span>), <span class="string">"p12文件的密码"</span>)</span><br></pre></td></tr></table></figure></p>
<p><strong>逻辑代码</strong></p>
<p>在controllers中添加生成订单的逻辑代码<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_wx_order</span></span></span><br><span class="line">    params = &#123;</span><br><span class="line">      body             <span class="symbol">:</span> <span class="string">'订单详情'</span>,</span><br><span class="line">      out_trade_no     <span class="symbol">:</span> <span class="string">'网站订单编号'</span>,</span><br><span class="line">      spbill_create_ip <span class="symbol">:</span> <span class="string">'买家的ip'</span>,</span><br><span class="line">      notify_url       <span class="symbol">:</span> <span class="string">'服务器接受微信订单通知的地址'</span>, <span class="comment"># 需要为POST请求地址</span></span><br><span class="line">      trade_type       <span class="symbol">:</span> <span class="string">'APP'</span>,                          <span class="comment"># could be "JSAPI", "NATIVE" or "APP",</span></span><br><span class="line">      total_fee        <span class="symbol">:</span> <span class="number">1</span>,                              <span class="comment"># 以分为单位1代表1分钱，即0.01元</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请求微信的服务器，并且产生一个微信订单</span></span><br><span class="line">    r = <span class="constant">WxPay::Service</span>.invoke_unifiedorder params</span><br><span class="line">    <span class="comment">#=&gt; &#123;</span></span><br><span class="line">    <span class="comment">#     "return_code" =&gt; "SUCCESS",</span></span><br><span class="line">    <span class="comment">#     "return_msg"  =&gt; "OK",</span></span><br><span class="line">    <span class="comment">#     "appid"       =&gt; "YOUR APPID",</span></span><br><span class="line">    <span class="comment">#     "mch_id"      =&gt; "YOUR MCH_ID",</span></span><br><span class="line">    <span class="comment">#     "sign"        =&gt; "623AE90C9679729DDD7407DC7A1151B2",</span></span><br><span class="line">    <span class="comment">#     "result_code" =&gt; "SUCCESS",</span></span><br><span class="line">    <span class="comment">#     "prepay_id"   =&gt; "wx2014111104255143b7605afb0314593866", # #支付码，相当于该订单的标示Id</span></span><br><span class="line">    <span class="comment">#     "nonce_str"   =&gt; "8RN7YfTZ3OUgWX5e",                     # #机生成码，需要在客户端请求的时候带上</span></span><br><span class="line">    <span class="comment">#     "code_url"    =&gt; "weixin://"</span></span><br><span class="line">    <span class="comment">#     "trade_type"  =&gt; "NATIVE"</span></span><br><span class="line">    <span class="comment">#   &#125;</span></span><br><span class="line">    <span class="keyword">if</span> r.success?</span><br><span class="line">        <span class="comment"># 生成手机客户端向微信服务器请求时需要的参数</span></span><br><span class="line">        client_req = <span class="constant">WxPay::Service::</span>generate_app_pay_req(&#123;</span><br><span class="line">            <span class="symbol">prepayid:</span> r[<span class="string">"prepay_id"</span>],</span><br><span class="line">            <span class="symbol">noncestr:</span> r[<span class="string">"nonce_str"</span>]</span><br><span class="line">            &#125;)</span><br><span class="line">       <span class="comment">#=&gt;&#123;</span></span><br><span class="line">       <span class="comment">#      appid     : '应用id',</span></span><br><span class="line">       <span class="comment">#      partnerid : '商户id',</span></span><br><span class="line">       <span class="comment">#      noncestr  : '1101000000140429eb40476f8896f4c9',</span></span><br><span class="line">       <span class="comment">#      prepayid  : '1101000000140415649af9fc314aa427',</span></span><br><span class="line">       <span class="comment">#      timestamp : '1398746574',</span></span><br><span class="line">       <span class="comment">#      package   : 'Sign=WXPay',                       # 微信要求的固定参数</span></span><br><span class="line">       <span class="comment">#      sign      : '根据参数生成的sign'                # 生成规则参考微信文档，wx_pay会自动生成, 不用手动生成</span></span><br><span class="line">       <span class="comment">#&#125;</span></span><br><span class="line">        render <span class="symbol">json:</span> client_req</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        render <span class="symbol">json:</span> &#123;<span class="symbol">message:</span> <span class="string">"error"</span>&#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p><strong>处理微信的回调</strong></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span></span></span><br><span class="line">    result = <span class="constant">Hash</span>.from_xml(request.body.read)[<span class="string">"xml"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 验证签名是否是正确的</span></span><br><span class="line">    <span class="keyword">if</span> <span class="constant">WxPay::Sign</span>.verify?(result)</span><br><span class="line">        <span class="comment"># 为了更安全的考虑 可以让服务器再向微信服务器查询订单的状态</span></span><br><span class="line">        <span class="comment"># api地址: https://pay.weixin.qq.com/wiki/doc/api/app.php?chapter=9_2&amp;index=4</span></span><br><span class="line">        orderStatus = <span class="constant">WxPay::Service</span>.order_query(&#123;</span><br><span class="line">            <span class="symbol">out_trade_no:</span> <span class="string">"商户订单号"</span></span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="keyword">if</span> orderStatus.success?</span><br><span class="line">            render <span class="symbol">:xml</span> =&gt; &#123;<span class="symbol">return_code:</span> <span class="string">"SUCCESS"</span>&#125;.to_xml(<span class="symbol">root:</span> <span class="string">'xml'</span>, <span class="symbol">dasherize:</span> <span class="keyword">false</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        render <span class="symbol">:xml</span> =&gt; &#123;<span class="symbol">return_code:</span> <span class="string">"FAIL"</span>, <span class="symbol">return_msg:</span> <span class="string">"签名失败"</span>&#125;.to_xml(<span class="symbol">root:</span> <span class="string">'xml'</span>, <span class="symbol">dasherize:</span> <span class="keyword">false</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="u5BA2_u6237_u7AEF_3A_iOS_+_Swift_+_Alamofire"><a href="#u5BA2_u6237_u7AEF_3A_iOS_+_Swift_+_Alamofire" class="headerlink" title="客户端: iOS + Swift + Alamofire"></a>客户端: iOS + Swift + Alamofire</h3><hr>
<p>为了安全起见，将预订单生成的逻辑，全都放在了服务器，所以客户端整体上在发起支付的过程中没有做太多的工作，就是将服务器生成的支付信息，直接再转交给微信服务器就可以了。</p>
<p><strong>配置</strong></p>
<ol>
<li>将下载的Sdk文件中的所有头文件与源文件拖入到项目中</li>
<li>bridge文件中添加: <code>#import &quot;WXApi.h&quot;</code></li>
<li>AppDelegate.swift的载入方法中添加: <code>WXApi.registerApp(&quot;appid&quot;)</code></li>
<li>配置应用的scheme: wx+微信分配的Appid(没有+号)</li>
</ol>
<p><strong>逻辑代码</strong><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Alamofire</span>.request(.<span class="type">POST</span>, <span class="string">"create_wx_order"</span>, parameters: parameter!, headers: headers).responseJSON &#123; (response) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">let</span> result = response.result.value!</span><br><span class="line">    <span class="keyword">let</span> req = <span class="type">PayReq</span>()</span><br><span class="line">    req.partnerId = result[<span class="string">"partnerid"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    req.prepayId = result[<span class="string">"prepayid"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    req.package = result[<span class="string">"package"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    req.nonceStr = result[<span class="string">"noncestr"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    req.timeStamp = <span class="type">UInt32</span>(result[<span class="string">"timestamp"</span>] <span class="keyword">as</span>! <span class="type">String</span>)!</span><br><span class="line">    req.sign = result[<span class="string">"sign"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    <span class="type">WXApi</span>.sendReq(req) <span class="comment">// 发起支付请求</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>处理微信的回调</strong><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加一个WXApiManager.swift 仿照微信提供的Demo</span></span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">let</span> sharedInstance = <span class="type">WXApiManager</span>()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">WXApiManagerDelegate</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">weixinPaySuccess</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">weixinPayFailed</span><span class="params">(errorCod: Int32, andErrorMessage msg: String!)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WXApiManager</span> : <span class="title">NSObject</span>, <span class="title">WXApiDelegate</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 实现单例方法</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">sharedManager</span> : <span class="title">WXApiManager</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sharedInstance</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">var</span> delegate : <span class="type">WXApiManagerDelegate</span>?</span><br><span class="line">    <span class="keyword">public</span> <span class="func"><span class="keyword">func</span> <span class="title">onResp</span><span class="params">(resp: BaseResp!)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> resp.isKindOfClass(<span class="type">PayResp</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span>(resp.errCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                delegate?.weixinPaySuccess()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                delegate?.weixinPayFailed(resp.errCode, andErrorMessage: resp.errStr)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">                delegate?.weixinPayFailed(resp.errCode, andErrorMessage: resp.errStr)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                delegate?.weixinPayFailed(resp.errCode, andErrorMessage: resp.errStr)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在AppDelegate将微信的回调传给WXApiManager</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(app: UIApplication, openURL url: NSURL, options: [String : AnyObject])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="type">WXApi</span>.handleOpenURL(url, delegate: <span class="type">WXApiManager</span>.sharedManager)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上就是客户端与服务器的支付工作，关于订单如何处理，订单与支付的状态这些，就得按照业务逻辑，单独做处理了。但是与微信的交互基本上就是这些，目前还没有发现比较难搞的坑。而且准备阶段的申请，也比较快，没有想象中的那么久，基本上四五个工作日下来，如果资料齐全就可以开通支付功能。</p>
<h2 id="u652F_u4ED8_u5B9D"><a href="#u652F_u4ED8_u5B9D" class="headerlink" title="支付宝"></a>支付宝</h2><p><strong>参考地址</strong></p>
<ul>
<li><a href="https://doc.open.alipay.com/doc2/detail.htm?spm=0.0.0.0.lAKmoy&amp;treeId=44&amp;articleId=103921&amp;docType=1" target="_blank" rel="external">开通准备</a></li>
<li><a href="https://doc.open.alipay.com/doc2/detail?treeId=59&amp;articleId=103563&amp;docType=1" target="_blank" rel="external">支付宝文档</a></li>
<li><a href="https://github.com/chloerei/alipay" target="_blank" rel="external">alipay</a></li>
<li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="external">Alamofire</a></li>
</ul>
<h3 id="u6211_u9760"><a href="#u6211_u9760" class="headerlink" title="我靠"></a>我靠</h3><p>不得不承认支付宝的服务确实开通的比较早，因为单单接入教程与应用的创建入口，就有两三个。基本上都是一路试过来才能知道，到底哪个才是正确入口。所以重点终于来了，</p>
<p><strong>进入支付宝的正确姿势:</strong></p>
<ol>
<li>生成公钥与密钥: <a href="https://doc.open.alipay.com/doc2/detail.htm?spm=0.0.0.0.O1c6AE&amp;treeId=44&amp;articleId=103242&amp;docType=1" target="_blank" rel="external">文档地址</a></li>
<li><strong>上传生成的公钥</strong>: <ol>
<li>上传的是上一步生成的自己的公钥。</li>
<li>去掉第一行与最后一行，并且上传的时候，需要把行尾的回车符也都删除。</li>
<li>上传的地址: <strong>合作伙伴密钥</strong>，这一步很关键，之间我只上传了<strong>应用详情</strong>下面的公钥，<strong>调试不通</strong>，后来上传了合作伙伴的密钥，才调试通过。</li>
</ol>
</li>
<li><strong>支付宝的公钥</strong>: <strong>不能</strong>使用应用详情下的支付宝公钥，需要用支付宝Demo中提供的公钥。</li>
</ol>
<p>如果这几点能搞对的话，剩下就是力气活了。</p>
<h3 id="u670D_u52A1_u5668_3A_Ruby_On_Rails"><a href="#u670D_u52A1_u5668_3A_Ruby_On_Rails" class="headerlink" title="服务器: Ruby On Rails"></a>服务器: Ruby On Rails</h3><hr>
<p><strong>配置</strong></p>
<p>使用了Gem: <a href="https://github.com/chloerei/alipay" target="_blank" rel="external">alipay</a><br>在Gemfile中添加:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">'alipay'</span></span><br></pre></td></tr></table></figure></p>
<p>在config/initializers/下的ruby文件中添加配置<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">Alipay</span>.pid = <span class="string">'商户创'</span></span><br><span class="line"><span class="constant">Alipay</span>.key = &lt;&lt;-<span class="constant">EOF</span></span><br><span class="line">直接将私钥的所有内容拷贝到这里 包括第一行与最后一行</span><br><span class="line"><span class="constant">EOF</span></span><br><span class="line"><span class="constant">Alipay</span>.sign_type = <span class="string">'RSA'</span></span><br></pre></td></tr></table></figure></p>
<p><strong>逻辑代码</strong></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_alipay</span></span></span><br><span class="line">    <span class="comment"># 这个方法会生成客户端向支付宝发送请求时候的所有参数</span></span><br><span class="line">    <span class="comment"># 并且将这些参数用你的私钥生成sign</span></span><br><span class="line">    <span class="comment"># 最后把这些参数合起来组合成一个字符串</span></span><br><span class="line">    <span class="comment"># 客户端只需要把这个字符串直接提交至支付宝的SDK即可</span></span><br><span class="line">    str = <span class="constant">Alipay::Mobile::Service</span>.mobile_securitypay_pay_string(</span><br><span class="line">      out_trade_no <span class="symbol">:</span> <span class="string">'本地的订单编号'</span>,</span><br><span class="line">      notify_url   <span class="symbol">:</span> <span class="string">'回调地址'</span>,</span><br><span class="line">      subject      <span class="symbol">:</span> <span class="string">'订单信息'</span>,</span><br><span class="line">      total_fee    <span class="symbol">:</span> <span class="string">'0.01'</span>            <span class="comment"># 以元为单位，0.01为1分</span></span><br><span class="line">    )</span><br><span class="line">    render <span class="symbol">json:</span> &#123;<span class="symbol">message:</span> str&#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>处理支付宝的回调</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">notify_params = params.except(*request.path_parameters.keys)</span><br><span class="line"><span class="keyword">if</span> <span class="constant">Alipay::Notify</span>.verify?(notify_params)</span><br><span class="line">    <span class="keyword">return</span> render <span class="symbol">text:</span> <span class="string">"success"</span> <span class="comment">#  必须向支付宝发送纯文本的"success"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="constant">Rails</span>.logger.info <span class="string">"-------------- failure"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p><strong>可能会遇到的问题</strong></p>
<ul>
<li>Rails报错<code>SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed</code>，这是因为<code>Alipay::Notify.verify</code>会向支付宝发送https请求来验证订单是否真的完成了，而ruby可能会找不到SSL的证书，解决的办法就是下载SSL证书，并且正确声明证书的地址。<a href="http://stackoverflow.com/questions/4528101/ssl-connect-returned-1-errno-0-state-sslv3-read-server-certificate-b-certificat" target="_blank" rel="external">参考链接</a></li>
<li>向支付宝的验证必须在1分钟之内完成，超过一分钟，返回结果就会变成false，而且只能验证一次，只要成功验证一次返回了true，以后再去验证的时候也是只返回false。</li>
</ul>
<h3 id="u5BA2_u6237_u7AEF_3A_iOS_+_Swift_+_Alamofire-1"><a href="#u5BA2_u6237_u7AEF_3A_iOS_+_Swift_+_Alamofire-1" class="headerlink" title="客户端: iOS + Swift + Alamofire"></a>客户端: iOS + Swift + Alamofire</h3><hr>
<p>同微信的实现逻辑类似，也是客户端只是把服务器拼好的请求信息，直接请求出去，就可以了。</p>
<p><strong>配置</strong></p>
<ol>
<li>添加需要的库文件<a href="https://doc.open.alipay.com/doc2/detail.htm?spm=0.0.0.0.5Q5ik4&amp;treeId=59&amp;articleId=103676&amp;docType=1" target="_blank" rel="external">参考链接</a></li>
<li>配置应用的scheme</li>
</ol>
<p><strong>逻辑代码</strong></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Alamofire</span>.request(.<span class="type">POST</span>, <span class="string">"create_alipay_order"</span>, parameters: parameter!, headers: headers).responseJSON &#123; (response) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    <span class="type">AlipaySDK</span>.defaultService().payOrder(result[<span class="string">"message"</span>] <span class="keyword">as</span>! <span class="type">String</span>, fromScheme: <span class="string">"应用的scheme"</span>, callback: &#123; (payResult) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        <span class="comment">// 如果应用没有被kill掉，支付结果会回调到这里来</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>处理支付宝的回调</strong><a href="https://doc.open.alipay.com/doc2/detail.htm?spm=0.0.0.0.HpJm5b&amp;treeId=59&amp;articleId=103660&amp;docType=1" target="_blank" rel="external">参考链接</a><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(app: UIApplication, openURL url: NSURL, options: [String : AnyObject])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="type">AlipaySDK</span>.defaultService().processOrderWithPaymentResult(url) &#123; (payResult) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        <span class="comment">// 如果支付过程中被kill掉，就需要在这里进行提示处理</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上就是支付宝的接入过程，虽然代码没有多少，主要经历都是浪费在了支付宝网站上的配置，需要在正确的地方上传正确格式的公钥。</p>
<h2 id="23_23_23Ping++"><a href="#23_23_23Ping++" class="headerlink" title="###Ping++"></a>###Ping++</h2><p>因为我只是尝试了Ping++的测试模式，具体的真是环境怎么样，我也不得而知，但就测试接入的流程，确实很简单，所以就只说一下我的看法:</p>
<ol>
<li><strong>难易程度</strong>: 真的很方便，几行代码就可以搞定，但我只是在<strong>测试模式</strong>模式下，正式环境会不会更复杂，我也不得而知。</li>
<li><strong>安全性</strong>: 需要把自己的密钥上传至Ping++的服务，但我并没有觉得这样会很危险，反而相信他们可以做的更专业。</li>
<li><strong>为什么放弃</strong>: 主要是不想让第三方看到自己的交易记录。</li>
</ol>
<h3 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h3><hr>
<p>总体来说，如果配置都没有问题，使用Gem包，接入还是很方便的。<br>完。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5FAE_u4FE1"><a href="#u5FAE_u4FE1" class="headerlink" title="微信"></a>微信</h2><p><strong>参考地址</strong></p>
<ul>
<li><a href="http://k]]>
    </summary>
    
  </entry>
  
</feed>
